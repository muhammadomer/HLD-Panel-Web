@model Hld.WebApplication.ViewModel.SearchViewModelShipment

@{
    ViewData["Title"] = "ViewShipment";
    Layout = "~/Views/Shared/_LayoutNavigation.cshtml";
}
@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService
<link href="~/lib/jQuery-MultiSelect/jquery.multiselect.css" rel="stylesheet" />
<link href="~/select2/css/select2.min.css" rel="stylesheet" />
<link href="~/css/date-range-picker/daterangepicker.css" rel="stylesheet" />
@*<script src="~/lib/jquery.tablesorter/js/jquery.tablesorter.js"></script>
    <link href="~/lib/jquery.tablesorter/css/theme.default.min.css" rel="stylesheet" />*@
<style>
    .pagination > a {
        padding: 5px;
    }

    .ms-options-wrap.ms-active > .ms-options {
        max-width: 400px !important;
        min-height: 92px !important;
    }

    .ms-options-wrap > button:focus, .ms-options-wrap > button {
        border-radius: 4px;
        height: 25px;
        outline: none !important;
    }

    ms-options-wrap > button:focus, .ms-options-wrap > button {
        padding: 1px 0px 1px 2px !important;
    }

    .ms-options-wrap > .ms-options > ul label {
        width: 101% !important;
    }

    .loader {
        position: fixed;
        left: 0px;
        top: 0px;
        width: 100%;
        height: 100%;
        z-index: 9999;
        opacity: .9;
        background-color: rgb(249,249,249);
    }

    .mydelte {
        position: fixed;
        top: 25%;
        left: 85%;
        color: red;
        transform: translate(-50%, -50%);
        box-sizing: border-box;
        padding: 30px;
    }

    .loader img {
        /*width: 300px;
            height: 220px;*/
        top: 50%;
        position: absolute;
        left: 50%;
        margin: 0;
        margin-right: -50%;
        transform: translate(-50%,-50%);
    }

    .colorhead {
        color: #548b8d;
    }

    .ui-autocomplete {
        z-index: 2000;
    }

    .colorhead {
        color: #548b8d;
    }

    .searchFormcard {
        position: fixed;
        background: white;
        width: 95%;
        padding: 35px 0px 5px 0px;
        top: 15px;
        z-index: 500;
        margin-left: 13px;
    }

    .searchFormFixed {
        position: fixed;
        top: 216px;
        width: 100%;
        z-index: 500;
        padding-bottom: 0px;
        background: white;
    }

    #myModalEdit, #myModalMarkReceived {
        margin: 20px;
        margin-top: 88px;
    }

    .fixedclassforpagination {
        position: fixed;
        top: 268px;
        padding-bottom: 0px;
        z-index: 400;
        background: white;
    }

    .hidedialogbox {
        font-family: Arial;
        position: absolute;
        top: 1000px;
        width: 1000px;
        height: auto;
    }

    .myclass {
        position: fixed;
        top: 17%;
        left: 90%;
        color: green;
        transform: translate(-50%, -50%);
        box-sizing: border-box;
        padding: 30px;
    }

    .myclasscancel {
        position: fixed;
        top: 17%;
        left: 90%;
        color: black;
        transform: translate(-50%, -50%);
        box-sizing: border-box;
        padding: 30px;
    }
</style>


<div class="modal fade" id="myModalMarkReceived" style="margin-top: 80px!important;" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header" style="display:flex;flex-direction:row-reverse!important">

                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="exampleModalLabel"><b>Receive Shipment</b></h4>
            </div>
            <div class="modal-body">

                <div class="form-group">
                    <label for="inputName">Receiving Date :</label>
                    <input type="date" value="" name="Receiveddate" class="form-control" id="Receiveddate">
                </div>
                @*<div class="form-group">
                                                <label for="inputComment">Notes:</label>
                    <textarea class="form-control myInput" value="@Model.Notes" name="Notes" maxlength="50" id="IdmyInput" rows="4"></textarea><span class="notescounter"></span>
                                            </div>*@

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default btncancel" data-dismiss="modal">Cancel</button>
                <button type="submit" class="btn btn-primary btncreate" id="BtnSaveReceived">Save</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="myModal" tabindex="-1" style="margin-top: 80px!important;" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header" style="display:flex;flex-direction:row-reverse!important">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="exampleModalLabel"><b>Box Detail</b></h4>
            </div>
            <div class="modal-body">
                <div class="form-row">
                    <div class=" col-12">

                        <table calss="table table5" style="width:100%">


                            <thead>
                                <tr>
                                    <th>
                                        Image
                                    </th>
                                    <th>
                                        SKU
                                    </th>
                                    <th>
                                        Shipped Qty
                                    </th>
                                </tr>
                            </thead>

                            <tbody class="mytab"></tbody>


                        </table>
                    </div>


                </div>



            </div>



        </div>
    </div>
</div>

<div class="hidedialogbox">
    <div id="dialog-box">
        <h6 style="color:red">Do you want to mark shipment received!</h6>
    </div>
</div>

<div class="container-fluid ">

    <div class="container-fluid card_head searchFormcard">
        <div class="card mt-3">
            <div style="padding:2px 0px" class="card-header">
                <b style="margin-left: 13px;">Shipment Details</b>
                @if ((await AuthorizationService.AuthorizeAsync(User, "Access to Receive Shipment")).Succeeded)
                {
                    @if (Model.Item.Status != 5)
                    {


                        <div style="float: right;">
                            <button class="btn btn-success MarkAsReceived">Mark As Received</button>
                        </div>
                    }
                }

                    <div style="float: right;">
                        <a href="../ShipmentBox/Create?ShipmentId=@Model.Item.ShipmentId" target="_blank" class="btn btn-success mr-2 btn-style" style="color:white;">Boxes Detail</a>
                    </div>
                    @if ((await AuthorizationService.AuthorizeAsync(User, "Access to Receive Shipment")).Succeeded)
                    {
                        @if (Model.Item.Status != 5)
                        {
                            <div style="float: right;">
                                <a class="btn btn-success mr-2" asp-controller="ShipmentProduct" asp-action="ShipementProductByBarcodeDumy" asp-route-ShipmentId="@Model.Item.ShipmentId" target="_blank">Receive Shipment</a>
                            </div>
                        }
                    }
                    else
                    {


                    }
                </div>
            <div class="row ml-0 mt-1" style="line-height:1!important">
                <div class="col-1">
                    <label class="control-label colorhead mb-0"><b>Ship from:</b></label>
                    <div class="" style="">
                        <label class="control-label colorhead mb-0"><b>ID:</b></label>
                        <label class="mb-0"> @Model.Item.VendorId</label> <br />
                        <label class="control-label colorhead "><b>Name:</b></label>
                        @Model.Item.Vendor
                    </div>
                </div>
                <div class="col-2">
                    <label class="control-label colorhead mb-0"><b>Shipment Name/ID:</b></label>
                    <div class="" style="">
                        <label class="control-label colorhead mb-0"><b>ID:</b></label>

                        <label class="mb-0"> @Model.Item.ShipmentId</label> <br />
                        <label class="control-label colorhead mb-0"><b>Name:</b></label>
                        @Model.Item.ShipmentName
                        <br />
                        <label class="control-label colorhead mb-0"><b>Shipment:</b></label> Mix SKUs
                    </div>
                </div>
                <div class="col-2">
                    <label class="control-label colorhead mb-0"><b>Shipping Wt / Volume:</b></label>
                   
                    <div class="" style="">
                        <label class="control-label colorhead mb-0"><b>Gross Wt:</b></label>
                        <label class="control-label mb-0" id="">@Math.Round(@Model.Item.GrossWt, 0) Kgs</label>
                        <br />
                        <label class="control-label colorhead mb-0"><b>CBM:</b></label>
                        <label class="control-label mb-0" id="">@Math.Round(@Model.Item.CBM, 3)</label>
                        <br />
                    </div>
                </div>
                <div class="col-2">
                    <label class="control-label colorhead mb-0"><b>Box Contents:</b></label>
                    <div class="" style="">
                        @*<label class="control-label colorhead"><b>Box ID:</b></label>*@
                        @*@Model.BoxId*@

                        @*<label class="control-label"><b>Dimension:</b></b></label>
                            W x H x L : @Model.Width x @Model.Height x @Model.Length
                            <br>
                            <label class="control-label"><b>Weight:</b></label>
                            @Model.Weight <span>Kg</span>*@
                        @*<label class="control-label colorhead mb-0"><b>Qty Shipped:</b></label>
                            <label class="control-label mb-0" id="totalshipedqty"></label>*@
                        <label class="control-label colorhead mb-0"><b>Qty Shipped:</b></label>
                        <label class="control-label mb-0" id="">@Model.Item.TotalShipedQty</label>
                        <br />
                        <label class="control-label colorhead mb-0"><b>Qty Recieved:</b></label>
                        <label class="control-label mb-0" id="">@Model.Item.TotalReceivedQty</label>
                        <br />
                        <label class="control-label mb-0 colorhead"><b>Boxes:</b></label>
                        <label class="control-label mb-0" id="totalBoxes"> @Model.Item.Boxes </label>
                        <br />
                        <label class="control-label mb-0 colorhead"><b>SKUs: </b></label>
                        <label class="control-label mb-0 " id="totalSKUs"> @Model.Item.SKUs </label>

                        <label class="control-label mb-0 colorhead"><b>PO's: </b></label>
                        <label class="control-label mb-0 " id="totalPOs">@Model.Item.POs </label>
                    </div>
                </div>
                <div class="col-2">
                    <label class="control-label colorhead mb-0"><b>Value Reconciliation:</b></label>
                    <div class="" style="">

                        <label class="control-label mb-0 colorhead"><b>Shipped&nbsp&nbsp&nbspCNY: </b></label>
                        <label class="control-label mb-0 " id="">@string.Format("{0:N2}", @Model.Item.ShipedAmountCNY) </label>
                        <br />
                        <label class="control-label mb-0 colorhead"><b>Received&nbspCNY: </b></label>
                        <label class="control-label mb-0 " id="">@string.Format("{0:N2}", @Model.Item.ReceivedAmountCNY)</label>
                        <br />
                        <label class="control-label mb-0 colorhead"><b>Shipped&nbsp&nbsp&nbspUSD:</b></label>
                        <label class="control-label mb-0" id=""> @string.Format("{0:N2}", @Model.Item.ShipedAmountUSD)</label>
                        <br />
                        <label class="control-label colorhead mb-0"><b>Received&nbspUSD:</b></label>
                        <label class="control-label mb-0" id="">@string.Format("{0:N2}", @Model.Item.ReceivedAmountUSD)</label>


                    </div>
                </div>
                <div class="col-3">
                    <label class="control-label mb-0 colorhead"><b>Shipment Status:</b></label>
                    @if (Model.Item.Status == 1)
                    {
                        <span>Open</span>
                    }
                    @if (Model.Item.Status == 2)
                    {
                        <span>In Process</span>
                    }
                    @if (Model.Item.Status == 3)
                    {
                        <span>Shipped</span>
                    }
                    @if (Model.Item.Status == 4)
                    {
                        <span>Receiving in process</span>
                    }
                    @if (Model.Item.Status == 5)
                    {
                        <span>Received</span>
                    }
                    <br />
                    <label class="control-label colorhead mb-0"><b>Created on:</b></label>
                    <label class="control-label mb-0" id="">
                        @if (@Model.Item.CreatedOn != DateTime.MinValue)
                        {
                            @string.Format("{0: MMM d, yyyy}", @Model.Item.CreatedOn)
                        }
                    </label>
                    <br />
                    <label class="control-label colorhead mb-0"><b>Shipped on:</b></label>
                    <label class="control-label mb-0" id="">
                        @if (@Model.Item.ShippedDate != DateTime.MinValue)
                        {
                            @string.Format("{0: MMM d, yyyy}", @Model.Item.ShippedDate)
                        }
                    </label>
                    <br />
                    <label class="control-label colorhead mb-0"><b>Expected Delivery:</b></label>
                    <label class="control-label mb-0" id="">
                        @if (@Model.Item.ExpectedDelivery != DateTime.MinValue)
                        {
                            @string.Format("{0: MMM d, yyyy}", @Model.Item.ExpectedDelivery)
                        }
                    </label>
                    <br />
                    <label class="control-label colorhead mb-0"><b>Recieved on:</b></label>
                    <label class="control-label mb-0" id="">
                        @if (@Model.Item.ReceivedDate != DateTime.MinValue)
                        {
                            @string.Format("{0: MMM d, yyyy}", @Model.Item.ReceivedDate)
                        }
                    </label>
                    <br />
                    <label class="control-label colorhead mb-0"><b>TrakingNumber :</b></label>
                    <label class="control-label mb-0" id="">
                    </label>
                    @if (string.IsNullOrEmpty(@Model.Item.TrakingURL))
                    {<a style="cursor:pointer" href="https://www.dhl.com/en/express/tracking.html?AWB='@Model.Item.TrakingNumber'&brand='@Model.Item.CourierCode'" target="_blank"> @Model.Item.CourierCode  @Model.Item.TrakingNumber</a> }

                else
                {<a style="cursor:pointer" href="@Model.Item.TrakingURL.Replace("{TrackingNumber}", @Model.Item.TrakingNumber)" target="_blank"> @Model.Item.CourierCode @Model.Item.TrakingNumber</a>}
                    @if ((await AuthorizationService.AuthorizeAsync(User, "Access to Product Link in PO")).Succeeded)
                    {

                        @*<span class="getshipmentId" data-shipmentId="@item.ShipmentId">Edit</span>*@
                    }

                    <!--<a style="cursor:pointer" href="https://www.dhl.com/en/express/tracking.html?AWB='@Model.Item.TrakingNumber'&brand='@Model.Item.CourierCode'" target="_blank">--> @*@Model.Item.CourierCode*@ <!--@Model.Item.TrakingNumber</a>-->
                    <div class="" style="">
                    </div>
                </div>
                @*<div class="col-0">
                    <label class="control-label colorhead"><b>Notes:</b></label>
                    <div class="" style="">
                    @Model.Item.Notes
                    </div>
                    </div>*@
            </div>
            <div class=" form-group row ml-0">

                <label class="control-label colorhead" style="margin-left: 15px;"><b>Notes:</b></label>
                <div class="col-sm-10" style="padding-left:2px">
                    @Model.Item.Notes
                </div>
            </div>
        </div>

    </div>
    <div class="loader">
        <img src="~/Images/giffff.gif" />
    </div>
    <div class="mb-1 searchFormFixed" id="searchForm">
        <div class="col-sm-12" style="padding: 0;
    margin-top: 11px;
    margin-bottom: 0;
    padding-left: 22px;">

            @using (Html.BeginForm("ShipmentIndex", "Shipment", FormMethod.Get))
            {


                <div class="row">
                    <div class="col-md-2 p-0 mr-1" style="margin-left: 7px;padding-left:3px">
                        <input type="text" id="SKU" name="SKU" placeholder="SKU" value="@Model.SKU" class="form-control" style="box-shadow:none" />
                        <input type="text" id="ShipmentId" style="display:none" name="ShipmentId" placeholder="SKU" value="@Model.ShipmentId" class="form-control" style="box-shadow:none" />
                    </div>
                    <div class="col-md-1 p-0 mr-1">
                        <input type="text" id="POID" name="POID" value="@Model.POID" placeholder="PO #" class="form-control" style="box-shadow: none" />
                    </div>

                    <div class=" col-md-3 p-0 mr-1">
                        <input type="text" id="title" name="title" placeholder="Title" value="@Model.Title" class="form-control" style="box-shadow:none" />
                    </div>
                    <div class=" col-md-1 p-0 mr-1">
                        <select id="multiselect" class="3col active form-control  mb-2 mr-sm-2 QuantityStatus" multiple="multiple" style="box-shadow:none">
                            <option value="OpenItem">Open Item</option>
                            <option value="ReceivedItem">Received Item</option>
                            <option value="OrderdItem">Ordered Item</option>
                        </select>
                        <input type="hidden" name="ItemType" id="ddlQuantity" />
                    </div>
                    @*<div class="col-md-1 p-0" style="margin-right: 15px;">
                            <div id="reportrange" style="background: #fff; cursor: pointer; border: 1px solid #ccc;padding: 3px;border-radius: 4px;width: 132px;box-shadow:none">
                                <i class="fa fa-calendar"></i>&nbsp;
                                <span></span> <i class="fa fa-caret-down"></i>
                            </div>
                            <input type="hidden" name="orderDateTimeFrom" id="orderDateTimeFrom" />
                            <input type="hidden" name="orderDateTimeTo" id="orderDateTimeTo" />
                        </div>*@
                    <div class="col-md-1 pl-0">
                        <button class="btn btn-primary" type="submit" id="btnSearchOrder" style="height: 25px">Search</button>
                    </div>
                </div>
                <div class="form-group">

                </div>


            }
        </div>

    </div>
</div>

<div class="row col col-12 fixedclassforpagination" id="fixActionMenu" style="margin-left: 10px;">
    <div class="col col-md-2">
        <div class="row">
            <div class="pagination col-md-3">

            </div>
        </div>
    </div>
    <div class="col col-md-3" style="padding-left: 0;padding-top: 5px;">
        <span> Total Items Found : @ViewBag.TotalCount</span>
    </div>
</div>

<div class="container-fluid">
    <div id="loadOrder">

    </div>
</div>
<div class="container-fluid">
    <div class="pagination" style="padding-left: 10px;">

    </div>
</div>
@section Scripts{
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script src="~/sticky-table-headers/js/jquery.stickytableheaders.min.js"></script>
    <script src="~/lib/jQuery-Paging/jquery.paging.min.js"></script>
    <script src="~/lib/jQuery-MultiSelect/jquery.multiselect.js"></script>
    <script src="~/select2/js/select2.full.min.js"></script>
    <script src="~/lib/jquery.tablesorter/js/jquery.tablesorter.min.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            $("#dialog-box").dialog({
                autoOpen: false,
                //title: 'Are u want to delete this reocord!',
                modal: true,
            });

            //$(".table").tablesorter();
            $(document).on('click', '.viewbtn', function () {
                debugger;
                BoxId = $(this).attr("data-BoxId");

                $.ajax({
                    type: 'GET',
                    url: '../Shipment/SKUWithShipedQty?BoxId=' + BoxId,
                    contentType: 'application/json',
                    success: function (res) {
                        console.log("data", res);
                        $(".mytab").html("");
                        //var skutbody= "<.mytable tbody>";
                        $.each(res, function (key, value) {
                            console.log(value.SKU);
                            console.log(value.ShipedQty);

                            var skutbody ='<tr>'+'<td style="padding-top:5px;padding-bottom:5px"><a id="largeimage" target="_blank" href=""><img style="width: 50px;" src="@ViewBag.S3BucketURL/'+ value.CompressedImage +'"/></a></td>'+'<td>'+ value.SKU +'</td><td>'+ value.ShipedQty +'</td>'+'</tr>';
                            $("table .mytab").append(skutbody);
                            @*skutbody = '<div class="mb-0"><b><label class="colorhead" style="">SKU:</label></b><label style = "" > ' + value.SKU + '</label ><div class=""><a id="largeimage" target="_blank" href=""><img style="width: 50px;" src="@ViewBag.S3BucketURL/' + value.CompressedImage + '"/></a></div ></div><div class="row"><b><label class="colorhead" style="margin-left:15px">Shipped Qty:</label></b><label style = "" > ' + value.ShipedQty + '</label ></div> ';
                            $("#skuShipeddiv").append(skutbody);*@
                        });
                        $('#myModal').modal('show');

                        //$(".skutable tbody").append(skutbody);


                    }
                });
                //$(this).find('input[type="text"]').focus();
            });
            //var Items = getUrlParameter('CustomerName');
            $('select[multiple].active.3col.QuantityStatus').multiselect({
                columns: 1,
                placeholder: 'Quantity Type',
                maxPlaceholderOpts: 1,

                selectAll: false,
                onOptionClick: function (element, option) {
                    $('#ddlQuantity').val($(element).val());
                    $(element).val();
                },
            });

            function SumHeader() {
                $('.QtyOrdered').text('@Model.Item.TotalOrderedQty');
                $('.QtyShipped').text('@Model.Item.TotalShipedQty');
                $('.QtyReceived').text('@Model.Item.TotalReceivedQty');
                $('.QtyOpen').text('@Model.Item.TotalOpenQty');
            }

            var getUrlParameter = function getUrlParameter(sParam) {
                var sPageURL = window.location.search.substring(1),
                    sURLVariables = sPageURL.split('&'),
                    sParameterName,
                    i;

                for (i = 0; i < sURLVariables.length; i++) {
                    sParameterName = sURLVariables[i].split('=');

                    if (sParameterName[0] === sParam) {
                        return sParameterName[1] === undefined ? true : decodeURIComponent(sParameterName[1]);
                    }
                }
            };
            var item = getUrlParameter('ItemType');
            $("#ShipmentId").val(getUrlParameter('ShipmentId'));
              //pagination
              $(".pagination").paging(parseInt('@ViewBag.TotalCount'), {
                  format: '[< nncnn >]',
                  perpage: 25, // show 10 elements per page
                  lapping: 0, // don't overlap pages for the moment
                  page: 1, // start at page, can also be "null" or negative
                  stepwidth: 0, // =0 means blockwise next/prev steps
                  onSelect: function (page) {
                      var ShipmentId = getUrlParameter('ShipmentId');
                      var SKU = $("#SKU").val();
                      var POID = $("#POID").val();
                      var Title = $("#title").val();
                      var item = getUrlParameter('ItemType');
                      pageNo = page;
                      debugger;
                      // add code which gets executed when user selects a page
                      var url = '/Shipment/ShipmentListData?page=' + page + '&SKU=' + SKU + '&ShipmentId=' + ShipmentId + '&Title=' + Title + '&ItemType=' + item + '&POID=' + POID ;
                      var completURL = url  ;
                      $(".loadertbl").show();
                       $(".loader").show();
                      $.ajax({
                          url: completURL,
                          data: {  },
                          type: 'POST',
                          traditional: true,
                          success: function (data) {
                              $('#loadOrder').empty();
                              $('#loadOrder').html(data);
                              $(function () {
                                  $(".detailtable").tablesorter();
                              })
                              SumHeader()
                              $(".loader").hide();

                              $(".loadertbl").hide();


                          }
                      });
                      if (typeof OrderDateTimeFrom !== "undefined" && typeof OrderDateTimeTo !== "undefined"  )
                      {
                          if (OrderDateTimeFrom !== "" && OrderDateTimeTo !== "") {
                              start = moment(OrderDateTimeFrom);
                              end = moment(OrderDateTimeTo);

                              cb(moment(OrderDateTimeFrom), moment(OrderDateTimeTo));
                          }
                          else
                          {
                              $('#reportrange span').html("No Date Selected");
                          }

                      }
                      else {
                          $('#reportrange span').html("No Date Selected");
                      }


                      //$.get(completURL).done(function (response) {
                      //      $('#loadOrder').empty();
                      //      $('#loadOrder').html(response);

                      //      $('#tableOrderList').stickyTableHeaders({ fixedOffset: 65 });
                      //  });
                    },
                    onFormat: function (type) {
                        switch (type) {
                            case 'block': // n and c
                                if (this.page === this.value) {
                                    return '<span>' + this.value + '</span>';
                                } else {
                                    return '<a href="#">' + this.value + '</a>';
                                }
                            case 'next': // >
                                return '<a href="#">&gt;</a>';
                            case 'prev': // <
                                return '<a href="#">&lt;</a>';
                            case 'first': // [
                                return '<a href="#">First</a>';
                            case 'last': // ]
                                return '<a href="#">Last</a>';
                        }
                  }


            });
            //$(".table").tablesorter();
            $('#POID').val('');
            var item = getUrlParameter('ItemType');
            $('#SKU').autocomplete({
                autoFocus: true,
                source: function (request, response) {
                    $.ajax({
                        url: "/Shipment/GetAllSKUForAutoComplete",
                        type: "POST",
                        minLength: 3,
                        dataType: "json",
                        data: { Prefix: request.term, ShipmentId:'@Model.Item.ShipmentId' },
                        success: function (data, ui) {
                            console.log("Data", data);
                            //if (data.length > 0) {
                            response($.map(data, function (item) {
                                if (item != null) {
                                    return { label: item.SKU, value: item.SKU, id: item.SKU };
                                }

                            }));
                        }
                    })
                },
                response: function (event, ui) {
                    console.dir(ui.content)
                    if (ui.content.length === 0) {
                        $("#sku-empty-message-Color").text("No results found");
                    } else {
                        $("#sku-empty-message-Color").empty();
                    }
                }
            });
            if (item != null)
            {
                    var res = item.split(",");
              $.each(res, function (key, value) {
                $(".ms-options").find("input[type=checkbox]").each(function () {

                    if ($(this).val() == value.trim()) {
                        $(this).prop("checked", true);
                          $('#ddlQuantity').val($(this).val());
                    }
                });
            });
            }
            function SumShipedQty() {
                var Total = 0;
                $('.table tbody tr').each(function () {
                    debugger;
                    var number = parseInt($(this).find('.shipedqty').text());
                    if (number > 0)
                        Total = Total + number;
                    debugger;
                });
                debugger;
                $("#totalshipedqty").text(Total);
            }
            //setTimeout(function () { SumShipedQty(); }, 10000);

            $(document).on('click', '.MarkAsReceived', function (event) {
                //$('.btnsubmit').prop('disabled', false);
                //$(".modal-body").css("opacity", "1");
                var ShippedQty = '@Model.Item.TotalShipedQty';
                var ReceivedQty = '@Model.Item.TotalReceivedQty';
                if (ShippedQty == ReceivedQty) {
                    $('#myModalMarkReceived').modal('show');
                }
                else {
                    $.notify("You can't receive this shipement because some products are pending", { className: 'danger mydelte' });
                }
            });
            $(document).on('click', '#BtnSaveReceived', function (event) {
                $('#BtnSaveReceived').prop('disabled', true);
                $(".modal-body").css("opacity", "0.1");
                var data = {
                    ShipmentId: '@Model.Item.ShipmentId',
                    ReceivedDate: $("#Receiveddate").val(),
                };
                debugger;
                $.ajax({
                    type: 'POST',
                    url: '../ShipmentProduct/ShipmentasReceived',
                    data: { data },
                    success: function (res) {
                        $('#myModalMarkReceived').modal('hide');
                        $.notify('Received Successfully', { globalPosition: 'bottom right', className: 'success myclass' });
                        location.reload();
                    },
                    Error: function (err) {
                    }
                });
            });


            @*$(document).on('click', '.MarkAsReceived', function (event) {
                $("#dialog-box").dialog({
                    buttons: {
                        "Confirm": function () {
                            var data = {
                                ShipmentId: '@Model.Item.ShipmentId',
                            };

                            $.ajax({
                                type: 'POST',
                                url: '../ShipmentProduct/UpdateShipmentStatus',
                                data: { data },
                                success: function (res) {
                                    $.notify('Received Successfully', { globalPosition: 'bottom right', className: 'success myclass' });
                                    location.reload();
                                },
                                Error: function (err) {
                                }
                            });
                        }
                    },
                    "Cancel": function () {
                        $(this).dialog("close");
                    }

                });
                $("#dialog-box").dialog("open");
                debugger;
            });*@
        });


    </script>
}
