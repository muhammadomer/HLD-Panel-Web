@model Hld.WebApplication.ViewModel.GetSendToZincOrderViewModel
@{
    ViewData["Title"] = "GetSendToZincCount";
    Layout = "~/Views/Shared/_LayoutNavigation.cshtml";

}@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService
    <link href="~/lib/jQuery-MultiSelect/jquery.multiselect.css" rel="stylesheet" />
    <link href="~/select2/css/select2.min.css" rel="stylesheet" />

    <link href="~/css/date-range-picker/daterangepicker.css" rel="stylesheet" />
    <div class="container-fluid"style="margin-left:15px">
        @using (Html.BeginForm("GetSendToZincCount", "Zinc", FormMethod.Get))
        {
            <div class="card-body">

                <div class="row">

                    <div class="col-md-2 p-0 mr-1">
                        <input type="text" id="SKU" name="Sku" placeholder="SKU" value="@Model.Sku" class="form-control" style="box-shadow:none" />
                    </div>
                    <div class=" col-md-2 p-0 mr-1">
                        <input type="text" id="ASIN" name="Asin" placeholder="Asin" value="@Model.Asin" class="form-control" style="box-shadow:none" />
                    </div>
                    <div class="col-md-1 p-0" style="margin-right: 15px;">
                        <div id="reportrange" style="background: #fff; cursor: pointer; border: 1px solid #ccc;padding: 3px;border-radius: 4px;width: 132px;box-shadow:none">
                            <i class="fa fa-calendar"></i>&nbsp;
                            <span></span> <i class="fa fa-caret-down"></i>
                        </div>
                        <input type="hidden" name="orderDateTimeFrom" id="orderDateTimeFrom" />
                        <input type="hidden" name="orderDateTimeTo" id="orderDateTimeTo" />
                    </div>
                    <div class="col-md-1">
                        <button class="ml-1 btn btn-primary" type="submit" id="btnSearchOrder">Search</button>
                    </div>
                </div>
                <div class="form-group">

                </div>
            </div>

        }
    </div>
    <div class="container-fluid" style="margin-left:15px">
        <h6>Zinc Order Details</h6>
    </div>
    <div class="container-fluid" style="margin-left:15px">

        <div class="row col col-12" id="fixActionMenu">
            <div class="col col-md-1">
                <div class="row">
                    <div class="pagination col-md-2 col">

                    </div>

                </div>
            </div>
            <div class="col col-md-2">
                <span>Results Found: @ViewBag.Records</span>
            </div>


        </div>
    </div>
    <div class="container-fluid">
        <div id="loadOrder">

        </div>
    </div>
    <div class="container-fluid" style="margin-left:15px">
        <div class="pagination">

        </div>
    </div>



    @section Scripts{
        @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
        <script src="~/sticky-table-headers/js/jquery.stickytableheaders.min.js"></script>
        <script src="~/lib/jQuery-Paging/jquery.paging.min.js"></script>
        <script src="~/lib/jQuery-MultiSelect/jquery.multiselect.js"></script>
        <script src="~/select2/js/select2.full.min.js"></script>

        <script src="~/lib/date-range-picker/moment.min.js"></script>
        <script src="~/lib/date-range-picker/daterangepicker.js"></script>

        <script src="~/lib/jquery.tablesorter/js/jquery.tablesorter.min.js"></script>
        <script type="text/javascript">

        $(document).ready(function () {
            var selectedDateFrom = "";
            var selectedDatTo = "";
            var start = moment().subtract(7, 'days');
            var end = moment();

            function cb(start, end) {

                $('#reportrange span').html(start.format('MMMM D, YYYY') + ' - ' + end.format('MMMM D, YYYY'));

            }

            $('#reportrange').daterangepicker({
                startDate: start,
                endDate: end,
                ranges: {
                    'Today': [moment(), moment()],
                    'Yesterday': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],
                    'Last 7 Days': [moment().subtract(6, 'days'), moment()],
                    'Last 30 Days': [moment().subtract(29, 'days'), moment()],
                    'This Month': [moment().startOf('month'), moment().endOf('month')],
                    'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]
                }
            }, cb);
            cb(start, end);

            $("#orderDateTimeFrom").datepicker({ dateFormat: 'yy-mm-dd' });


            $("#orderDateTimeTo").datepicker({ dateFormat: 'yy-mm-dd' });

            $('#reportrange').on('apply.daterangepicker', function (ev, picker) {

                selectedDateFrom = picker.startDate.format('YYYY-MM-DD');
                selectedDatTo = picker.endDate.format('YYYY-MM-DD');
                $("#orderDateTimeTo").val(selectedDatTo);
                $("#orderDateTimeFrom").val(selectedDateFrom);
                console.log($("#orderDateTimeTo").val());
                console.log(selectedDatTo);
            });
          //pagination
            var getUrlParameter = function getUrlParameter(sParam) {
                var sPageURL = window.location.search.substring(1),
                    sURLVariables = sPageURL.split('&'),
                    sParameterName,
                    i;

                for (i = 0; i < sURLVariables.length; i++) {
                    sParameterName = sURLVariables[i].split('=');

                    if (sParameterName[0] === sParam) {
                        return sParameterName[1] === undefined ? true : decodeURIComponent(sParameterName[1]);
                    }
                }
            };
    $(".pagination").paging(parseInt('@ViewBag.Records'), {
    format: '[< nncnn >]',
    perpage: 25, // show 10 elements per page
    lapping: 0, // don't overlap pages for the moment
    page: 1, // start at page, can also be "null" or negative
    stepwidth: 0, // =0 means blockwise next/prev steps
    onSelect: function (page) {

    pageNo = page;
    // add code which gets executed when user selects a page
       // var completURL = '/Zinc/GetSendToZincOrder?page=' + page + ''

        var OrderDateTimeFrom = getUrlParameter('orderDateTimeFrom');
        var OrderDateTimeTo = getUrlParameter('orderDateTimeTo');
        var SKU = $("#SKU").val();
        var asin = $("#ASIN").val();

    $(".loadertbl").show();

        $.ajax({
            url: url = '/Zinc/GetSendToZincOrder?page=' + page + '&Sku=' + SKU + '&Asin=' + asin + '&FromDate=' + OrderDateTimeFrom + '&ToDate=' + OrderDateTimeTo,
            data: {},
            type: 'POST',
            traditional: true,
            success: function (data) {
                $('#loadOrder').empty();
                $('#loadOrder').html(data);
                $(".loadertbl").hide();
                // $('#tableOrderList').stickyTableHeaders({ fixedOffset: 0 });
            }
        });
        if (typeof OrderDateTimeFrom !== "undefined" && typeof OrderDateTimeTo !== "undefined") {
            if (OrderDateTimeFrom !== "" && OrderDateTimeTo !== "") {
                start = moment(OrderDateTimeFrom);
                end = moment(OrderDateTimeTo);

                cb(moment(OrderDateTimeFrom), moment(OrderDateTimeTo));
            }
            else {
                $('#reportrange span').html("No Date Selected");
            }

        }
        else {
            $('#reportrange span').html("No Date Selected");
        }



    },
        onFormat: function (type) {
            switch (type) {
                case 'block': // n and c
                    if (this.page === this.value) {
                        return '<span>' + this.value + '</span>';
                    } else {
                        return '<a href="#">' + this.value + '</a>';
                    }
                case 'next': // >
                    return '<a href="#">&gt;</a>';
                case 'prev': // <
                    return '<a href="#">&lt;</a>';
                case 'first': // [
                    return '<a href="#">First</a>';
                case 'last': // ]
                    return '<a href="#">Last</a>';
            }
        }


    });





    });
        </script>
    }


