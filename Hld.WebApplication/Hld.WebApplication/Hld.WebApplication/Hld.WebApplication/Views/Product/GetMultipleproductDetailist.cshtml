@model IEnumerable<Hld.WebApplication.ViewModel.SaveParentSkuVM>

@{
    ViewData["Title"] = "GetMultipleproductDetailist";
}
<style>
    .table-bordered thead th, .table-bordered thead td {
        padding: 0px;
        border-bottom-width: 2px;
    }

    .table thead th {
        vertical-align: middle !important;
       
        border-bottom: 2px solid #dee2e6;
    }

    .table th, .table td {
        padding: 0.40rem;
        vertical-align: top;
        border-top: 1px solid #dee2e6;
        vertical-align: middle !important;
    }

    

    .table tbody tr:hover td {
        background: #f1f1f1;
        cursor: pointer;
    }

    .table {
        border-left: #ccc 1px solid !important;
        border-right: #ccc 1px solid !important;
        border-bottom: #ccc 1px solid !important;
    }

    .colorhead {
        color: #548b8d;
    }

    .myclass {
        position: fixed;
        top: 17%;
        left: 90%;
        color: green;
        transform: translate(-50%, -50%);
        box-sizing: border-box;
        padding: 30px;
    }

    .loader {
        position: fixed;
        left: 0px;
        top: 0px;
        width: 100%;
        height: 100%;
        z-index: 9999;
        opacity: .9;
        background-color: rgb(249,249,249);
    }

        .loader img {
            top: 50%;
            position: absolute;
            left: 50%;
            margin: 0;
            margin-right: -50%;
            transform: translate(-50%,-50%);
        }

    .hidedialogbox {
        font-family: Arial;
        position: absolute;
        top: 1000px;
        width: 1000px;
        height: auto;
    }
</style>


<div class="container-fluid">
    <h6>Multiple Parent SKU</h6>
    <table id="tableProductList" style="width:100%" class="table table-hover tablesorter">
        <thead style="background-color:lightgrey">
            <tr>
               
                <th>Parent SKU</th>
                <th>Parent Title</th>
                <th>SKU Creation Date</th>
                <th>Action</th>


            </tr>
        </thead>
        <tbody>

            @foreach (var item in Model)
            {
            <tr>
                @*<td>
            @{
                <a target="_blank" href="@ViewBag.S3BucketURL/@item.ImageName">
                    <img src="@ViewBag.S3BucketURL/@item.CompressedImage" class="rounded" height="50" width="50" />
                </a>
            }
        </td>*@
                <td>
                    @item.Sku
                    <input type="text" style="display:none" value="@item.productstatus" />
                    <input type="text" style="display:none" value="@item.Parentproduct_id" />
                </td>
                <td>
                    @item.ProductTitle
                </td>
                <td>
                    @string.Format("{0: MMM d, yyyy}", @item.SkuCreationDate)
                    
                </td>
                <!--<td>
    @item.Color-->
                @*@item.ColorAlias
        @item.ColorId*@

                <!--</td>-->
                @*<td>
            @item.Upc
        </td>*@

            <td>
                <a href="/Product/EditParentById?=@item.Parentproduct_id" style="cursor:pointer;"><img src="~/Images/icon-edit-512.png" height="20" /></a>
                <a href="/product/GetproductById?=@item.Parentproduct_id" target="_blank">Create Child SKU</a>
            </td>
            </tr>
            }
        </tbody>
    </table>
</div>

@section Scripts{
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script type="text/javascript">

        $(document).ready(function () {
            debugger;
            function autocolor() {
                $('.AddColor').autocomplete({
                    autoFocus: true,
                    source: function (request, response) {
                        $.ajax({
                            url: "/Product/GetAlColorForAutoComplete",
                            type: "POST",
                            minLength: 3,
                            dataType: "json",
                            data: { Prefix: request.term },
                            success: function (data, ui) {

                                //if (data.length > 0) {
                                response($.map(data, function (item) {
                                    if (item != null) {
                                        return { label: item.Name, value: item.Name, ColorAlias: item.ColorAlias };
                                    }

                                }));
                            }
                        })
                    },
                    select: function (event, ui) {

                        $('#ColorIdForMessage').val(ui.item.id);
                        $('.ColorAlias').val(ui.item.ColorAlias);

                    },
                    response: function (event, ui) {
                        console.dir(ui.content)
                        if (ui.content.length === 0) {
                            $("#empty-message-Color").text("No results found");
                            $('#ColorIdForMessage').val("0");

                            $('#InputSubmit').attr("disabled", true)
                        } else {
                            $("#empty-message-Color").empty();
                            $('#InputSubmit').attr("disabled", false)
                        }
                    }
                });
            }
            debugger;
            //$('.AddColor').change(function () {
            //    var topsku = $("#SKU").val();
            //    //var AddColor = $(".AddColor").val();
            //    var title = $("#ProductTitle").val();
            //    var AddColor = $(".AddColor").val();;
            //    var res = AddColor.charAt(0)
            //    var a = AddColor.substr(AddColor.length - 1);
            //    $(this).closest('tr').find(".AddSku").val(topsku + "-" + res + a);
            //    $(this).closest('tr').find(".AddTitle").val(title + "[" + AddColor);
            //});
            debugger;
            $('.AddColor').change(function () {

                var topsku = $("#SKU").val();
                var title = $("#ProductTitle").val();
                var AddColor = $(".AddColor").val();
                var ColorAlias = $('.ColorAlias').val();

                $(this).closest('tr').find(".AddSku").val(topsku + " - " + ColorAlias);

                    $(this).closest('tr').find(".AddTitle").val(title + " [ " + AddColor + " ]");

            });
            function addsku() {
                $('.AddColor').change(function () {

                        var topsku = $("#SKU").val();
                        var title = $("#ProductTitle").val();
                        var AddColor = $(".AddColor").val();
                        var ColorAlias = $('.ColorAlias').val();
                        $(this).closest('tr').find(".AddSku").val(topsku + " - " + ColorAlias);

                        $(this).closest('tr').find(".AddTitle").val(title + " [ " + AddColor + " ]");
                    });

            }

            function AddMarkup() {
                var markup = "<tr><td><input type='search' class='form-control AddColor' id='Color' name='Color' placeholder='Color'/><input type='text' style='display:none' class='form-control ColorAlias' name='ColorAlias' value=''><input type='text' style='display:none' class='form-control AddSku' value=''><span style='color:red;padding-left:0px;'id='empty-message-Color'></span></td><td><input type='text' class='form-control AddSku' placeholder='SKU'/><input type='text' style='display:none' class='form-control AddSku' value=''></td><td><input type='text' class='form-control AddTitle' placeholder='Title' /></td><td><input type='text' class='form-control AddUpc' placeholder='UPC'/></td><td><button type='button'class='btn btn-success addproduct' >Save</button> <button type='button' class='btn btn-sm delete' data-id='' style='' value=''><img src='/Images/trash-can-1.1s-128px.png' height='25' /></button></td></tr>";
                $("table tbody").append(markup);

            }
            var count = 0;
            $("#btnAddItem").click(function() {

                count++;
                if (count<1) {
                    AddMarkup()
                    autocolor();
                    addsku();
                }
                var tbody_tr_last = $('table>tbody>tr:last');
                var color = tbody_tr_last.find(".AddColor").val();
                var sku = tbody_tr_last.find(".AddSku").val();
                var title = tbody_tr_last.find(".AddTitle").val();
                //<span class='requiredCustomClass' style='float:right;'>*</span>
                if (color != '' && sku != '' && title != '') {
                    AddMarkup()
                   autocolor();
                   addsku();


                }
                else {
                    if (color == '') {
                        tbody_tr_last.find(".AddColor").addClass('warning')
                    }
                    if (sku == '') {
                        tbody_tr_last.find(".AddSku").addClass('warning')
                    }
                    if (title == '') {
                        tbody_tr_last.find(".AddTitle").addClass('warning')
                    }
                }
            });

            $(document).on("input", "table input", function () {
                if ($(this).val() == "") {
                    $(this).addClass("warning")
                } else {
                    $(this).removeClass("warning")

                }
            })
            if ($('#HfProductId').length > 0) {
                $.get('/Product/ShowImages/' + $('#HfProductId').val() + '').done(function (response) {
                    $('#imagesDivMainView').html(response);
                });
            }
            $('.addproduct').click(function () {

                $('.table tbody tr').each(function () {
                    var color = $(this).find('.AddColor').val();
                    var sku = $(this).find(".AddSku").val();
                    console.log("color value", color)
                    console.log("sku value", sku)
                });

            });
            $('#DeleteProduct').click(function () {
                var productSku = $(this).attr('data-ProductSKU');

                $.ajax({
                    type: "POST",
                    url: '@Url.Action("DeletProduct", "Product")?ProductSku='+productSku,
                    data: {},
                    success: function (data) {
                        console.log(data.statuss)
                    }
                });

            });



            $('input[id=SKU]').keyup(function (e) {
                $(this).val($(this).val().replace(/ +?/g, ''));
                $(this).addClass('text-uppercase');
                var remaining = 20 - $('#SKU').val().length;
                if (e.which == 32)
                    return false;

                $('#SKUCounter').text(remaining + "/" + 20);

                 var textBoxValue = $(this).val().trim();
            if (textBoxValue.length > 0) {
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("CheckProductSKUExists", "Product")',
                    data: { 'name': textBoxValue },
                    success: function (data) {
                        if (data.success == true) {
                            $('#IsExistsSKU').text("Already Exists").css("color", "red");
                            $('#InputSubmit').attr("disabled", true)
                        }
                        else {
                            $('#IsExistsSKU').text("Available").css("color", "green");
                            $('#InputSubmit').attr("disabled", false)
                        }
                    }
                });
            }
            else {
                $('#IsExistsSKU').text("");
            }


            });


            // focus in if default value is 0 than make it empty
            $("#UPCID, #shipmentLenghtId ,#shipmentHeightId ,#shipmentWidthId, #ShipmentWeightId ,#AvgCostId").focus(function () {
                if ($(this).val() == "0.00") {
                    $(this).val("");
                }
            });

            // focus out if default value is empty than make it 0
            $("#UPCID, #shipmentLenghtId ,#shipmentHeightId ,#shipmentWidthId, #ShipmentWeightId ,#AvgCostId").focusout(function () {

                if ($(this).val() == "") {
                    $(this).val("0");
                }
            });




            $("#fUpload").on("change", function (e) {

                var files = e.target.files,
                    filesLength = files.length;
                for (var i = 0; i < filesLength; i++) {
                    var f = files[i]
                    var fileReader = new FileReader();
                    fileReader.onload = (function (e) {
                        var file = e.target;
                        $("<span class=\"pip\">" +
                            "<img class=\"imageThumb\" src=\"" + e.target.result + "\" title=\"" + file.name + "\"/>" +
                            "</span>").insertAfter("#files");
                        $(".remove").click(function () {
                            var index = $(this).parent().index();
                            $(this).parent(".pip").remove();
                        });


                    });
                    fileReader.readAsDataURL(f);
                }
            });



            //on key press if textbox containa alphabets then remove those characters
            $("#UPCID,#shipmentLenghtId ,#shipmentHeightId ,#shipmentWidthId, #ShipmentWeightId ,#AvgCostId,#lblAvgCostCanada").keyup(function (event) {

                    var $this = $(this);
                 $this.val($this.val().replace(/[^\d.]/g, ''));

              if (event.target.id == "AvgCostId") {
                    $('#lblAvgCostCanada').val(parseFloat($('#AvgCostId').val() * $('#currencyRate').val()).toFixed(2));
                    $('#lblAvgCostCanada').prop("readonly",true)
                }
                if (event.target.id == "lblAvgCostCanada") {
                    $('#AvgCostId').val(parseFloat($('#lblAvgCostCanada').val() / $('#currencyRate').val()).toFixed(2));
                    $('#AvgCostId').prop("readonly", true)
                }


            });

            $('#UPCID').keyup(function () {
                CountDownCharacter(12, 'UPCID', 'UPCCounter');
            });

            $('#productDescription').keyup(function () {
                CountDownCharacter(1000, 'productDescription', 'productDescriptionCounter');
            });

            $('input[id=ProductTitle]').keyup(function () {
                CountDownCharacter(200, 'ProductTitle', 'ProductTitleCounter');
            });

            // categories autoComplete

            $('#CategoryId').autocomplete({
                autoFocus: true,
                source: function (request, response) {
                    $.ajax({
                        url: "/Product/GetAllCategoriesForAutoComplete",
                        type: "POST",
                        minLength: 3,
                        dataType: "json",
                        data: { Prefix: request.term },
                        success: function (data, ui) {

                            //if (data.length > 0) {
                            response($.map(data, function (item) {
                                if (item != null) {
                                    return { label: item.Name, value: item.Name, id: item.ID };
                                }

                            }));
                        }
                    })
                },
                select: function (event, ui) {

                    $('#categoriesValueId').val(ui.item.id);
                },
                response: function (event, ui) {
                    if (ui.content.length === 0) {
                        $("#empty-message").text("No results found");
                        $('#categoriesValueId').val("0");
                        $('#InputSubmit').attr("disabled", true)
                    } else {
                        $("#empty-message").empty();
                        $('#InputSubmit').attr("disabled", false)
                    }
                }
            });


            debugger;
            $('.AddColor').autocomplete({
                autoFocus: true,
                source: function (request, response) {
                    $.ajax({
                        url: "/Product/GetAlColorForAutoComplete",
                        type: "POST",
                        minLength: 3,
                        dataType: "json",
                        data: { Prefix: request.term },
                        success: function (data, ui) {

                            //if (data.length > 0) {
                            response($.map(data, function (item) {
                                if (item != null) {
                                    return { label: item.Name, value: item.Name, ColorAlias: item.ColorAlias };
                                }

                            }));
                        }
                    })
                },
                select: function (event, ui) {

                    $('#ColorIdForMessage').val(ui.item.id);
                    $('.ColorAlias').val(ui.item.ColorAlias);
                },
                response: function (event, ui) {
                    console.dir(ui.content)
                    if (ui.content.length === 0) {
                        $("#empty-message-Color").text("No results found");
                        $('#ColorIdForMessage').val("0");

                        $('#InputSubmit').attr("disabled", true)
                    } else {
                        $("#empty-message-Color").empty();
                        $('#InputSubmit').attr("disabled", false)
                    }
                }
            });


            // Brand AutoComplete

            $('#Brand').autocomplete({
                autoFocus: true,
                source: function (request, response) {
                    $.ajax({
                        url: "/Product/GetAllBrandForAutoComplete",
                        type: "POST",
                        minLength: 3,
                        dataType: "json",
                        data: { Prefix: request.term },
                        success: function (data, ui) {
                            response($.map(data, function (item) {
                                if (item != null) {

                                    return { label: item.BrandName, value: item.BrandName, id: item.BrandId };
                                }

                            }));
                        }
                    })
                },
                select: function (event, ui) {
                    debugger;
                    $('#BrandIdForMessage').val(ui.item.id);
                },
                response: function (event, ui) {

                    if (ui.content.length === 0) {
                        $("#empty-message-Brand").text("No results found");
                        $('#BrandIdForMessage').val("0");
                        $('#InputSubmit').attr("disabled", true)
                    } else {
                        $("#empty-message-Brand").empty();
                        $('#InputSubmit').attr("disabled", false)
                    }
                }
            });



            function CountDownCharacter(limit, controlID, target) {
                var remaining = limit - $('#' + controlID).val().length;
                $('#' + target).text(remaining + "/" + limit);
            }

            $('#ProductTitle').keyup(function () {
                capitalize_Words($(this).val(), 'ProductTitle');
            });



            function capitalize_Words(str, id) {
                var data = str.replace(/\w\S*/g, function (txt) { return txt.charAt(0).toUpperCase() + txt.substr(1) });
                $('#' + id).val(data);
            }

            $('#btnClose').click(function () {
                if ($('#HfProductId').length > 0) {
                    $.get('/Product/ShowImages/' + $('#HfProductId').val() + '').done(function (response) {
                        $('#imagesDivMainView').html(response);
                    });
                }
            });
        });


        function SubmitForm() {
            var files = $('#UloadImages').find('#fUpload').prop("files");
            var fdata = new FormData();
            for (var i = 0; i < files.length; i++) {
                fdata.append("files", files[i]);
            }
            fdata.append("ProductId", $('#HfProductId').val())
            if (files.length > 0) {
                $.ajax({
                    type: "POST",
                    url: "/Product/UploadImagesOfSku",
                    data: fdata ,
                    contentType: false,
                    processData: false,
                    success: function (response) {

                        $.get('/Product/ShowImages/' + $('#HfProductId').val()+'').done(function (response) {
                            $('#imagesDIV').html(response);
                        });
                    }
                });
            }
            else {
                alert('Please select a file.')
            }
        }


        function OpenUploadImagesForm(url) {
            $.get(url).done(function (response) {
                $('#modelBody').html(response);

                var res = url.split("/");

                $.get('/Product/ShowImages/'+res[3]+'').done(function (response) {
                    $('#imagesDIV').html(response);
                })
            });
        }

        $('body').on('click', 'span.close', function () {


            var ProductImageId = $(this).attr("data-porductImage-id");
            $(this).parent().remove();

            $.ajax({
                url: '@Url.Action("DeleteProductImage","Product")/' + ProductImageId + '',
                type: "POST",
                success: function (data) {
                    if (data.status) {

                        $(this).parent().remove();
                    }
                }
            });
        });



        $('body').on('keyup', '#UPCID', function () {
            var textBoxValue = $(this).val().trim();
            if (textBoxValue.length > 0) {
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("CheckProductUPCExists", "Product")',
                    data: { 'name': textBoxValue },
                    success: function (data) {
                        if (data.success == true) {
                            $('#IsExistsUPC').text("Already Exists").css("color", "red");
                            $('#InputSubmit').attr("disabled", true)
                        }
                        else {
                            $('#IsExistsUPC').text("Available").css("color", "green");
                            $('#InputSubmit').attr("disabled", false)
                        }
                    }
                });
            }
            else {
                $('#IsExistsUPC').text("");
            }
        });


    </script>
}
