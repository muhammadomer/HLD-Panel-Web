@model Hld.WebApplication.ViewModel.BestBuyOrdersViewModel
@inject Microsoft.AspNetCore.Hosting.IHostingEnvironment hostingEnv
@{
    ViewData["Title"] = "BestBuOrdersDetail";
    Layout = "~/Views/Shared/_LayoutNavigation.cshtml";
}
<link href="~/lib/jQuery-MultiSelect/jquery.multiselect.css" rel="stylesheet" />
<link href="~/select2/css/select2.min.css" rel="stylesheet" />

<link href="~/css/date-range-picker/daterangepicker.css" rel="stylesheet" />
<style type="text/css">

    /*.content {
        padding: 16px;
    }

    .sticky {
        position: fixed;
        top: 0;
        width: 100%;
    }

        .sticky + .content {
            padding-top: 102px;
        }*/

    .activeLink {
        background-color: blue;
        color: white;
    }

    .activeButton {
        display: none;
    }

    .inactiveButton {
        display: block;
    }

    .btn-success:not(:disabled):not(.disabled):active, .btn-success:not(:disabled):not(.disabled).active, .show > .btn-success.dropdown-toggle {
        color: #fff;
        margin-top: 3px;
        background-color: #1c7430;
        border-color: #1c7430;
    }

    .pagination > a {
        padding: 5px;
    }


    @@media (max-width:575px) {
        .card-header {
            /*margin-top: 40px;*/
            background-color: #b8cbcc;
            color: #000000;
        }
    }

    @@media (max-width: 575px) {
        .form-control {
            /*width: 155px;*/
            margin-left: 6px;
            margin-bottom: 8px;
            padding: 11px;
        }
    }

    @@media (max-width:575px) {
        .maintabsearch {
            min-width: 1200px;
        }
    }

    .ms-options-wrap {
        position: relative;
        width: auto !important;
        margin-right: 5px !important;
    }

        .ms-options-wrap > button:focus, .ms-options-wrap > button {
            border-radius: 3px !important;
        }

        .ms-options-wrap.ms-active > .ms-options {
            min-height: 62px !important;
            max-height: 400px !important;
            column-count: 1 !important;
            overflow-x: hidden !important;
        }

        .ms-options-wrap > button:focus, .ms-options-wrap > button {
            padding: 5px 22px 0px 5px !important;
        }
    /*#ms-list-3 .ms-options {
        width: 160px !important;
    }

    #ms-list-2 .ms-options {
        width: 160px !important;
    }

    #ms-list-5 .ms-options {
        width: 108px !important;
    }*/
    .container-fluid {
        padding-right: 4px !important;
        padding-left: 4px !important;
    }

    .card-body {
        padding: 15px 5px 15px !important;
    }

    .tagspan {
        font-weight: bold;
        padding-right: 5px;
        padding-left: 30px;
    }

    .ms-options-wrap button:focus {
        box-shadow: none !important;
    }

    .ms-options-wrap:nth-of-type(2) .ms-options {
        width: 160px !important;
    }

    .ms-options-wrap:nth-of-type(4) .ms-options {
        width: 109px !important;
    }

    .ms-options-wrap:nth-of-type(5) .ms-options {
        width: 160px !important;
    }

    .tbladd {
        top: 51px;
        position: fixed;
        width: 98.2%;
        z-index: 10;
    }

    .loadertbl {
        position: fixed;
        left: 0px;
        top: 0px;
        width: 100%;
        height: 100%;
        z-index: 9999;
        opacity: .9;
        background-color: rgb(249,249,249);
    }

        .loadertbl img {
            top: 50%;
            position: absolute;
            left: 50%;
            /*width: 300px;
            height: 220px;*/
            margin: 0;
            margin-right: -50%;
            transform: translate(-50%,-50%);
        }

    .list {
        position: relative;
        margin-bottom: 35px
        /* padding: 20px; */
    }

    .lbl {
        position: absolute;
        /* position: relative; */
        /* margin-left: 0; */
        right: 0;
        margin-bottom: -18px;
        bottom: 0;
        display: none;
        clear: both;
    }

    .item {
        padding-top: 19px;
        padding-left: 10px;
        padding-bottom: 40px;
        border: 1px solid
    }

    /*.tags {
        display: inline;
        position: relative;
    }

        .tags:hover:after {
            background: #333;
            background: rgba(0, 0, 0, .8);
            border-radius: 5px;
            bottom: -34px;
            color: #fff;
            content: attr(glose);
            left: 20%;
            padding: 5px 15px;
            position: absolute;
            z-index: 98;
            width: 100px;
        }

        .tags:hover:before {
            border: solid;
            border-color: #333 transparent;
            border-width: 0 6px 6px 6px;
            bottom: -4px;
            content: "";
            left: 50%;
            position: absolute;
            z-index: 99;
        }*/


</style>


<div class="container-fluid" style="margin-top:65px">
    <div class="loadertbl">
        <img src="~/Images/giffff.gif" />
    </div>
    <div class="mb-1 row" id="searchForm">
        <div class="col-sm-12">
            <div class="card">

                <div class="card-header">Search Orders </div>
                @if (Model.searchViewModel.ShippingTags != "")
                {
                    <div class="row">
                        <span class="tagspan">Tag :</span>
                        @switch (Model.searchViewModel.ShippingTags)
                        {
                            case "1":
                                <span style="padding-left:0px;" value="@Model.searchViewModel.ShippingTags" class="tags-status-text">DS</span>
                                break;
                            case "2":
                                <span style="padding-left:0px;" value="@Model.searchViewModel.ShippingTags" class="tags-status-text">WH</span>
                                break;
                        }

                    </div>
                }
                @if (Model.searchViewModel.ZincStatus != "")
                {
                    <div class="row">
                        <span style="        font-weight: bold;
        padding-right: 5px;
        position: relative;
        padding-left: 30px;" class="">Zinc Status :</span>
                        <span style="padding-left:0px;" class="Zn-status-text">@Model.searchViewModel.ZincStatus.Replace(",", ", ")</span>
                    </div>
                }
                @if (Model.searchViewModel.DSStatus != "")
                {
                    <div class="row">
                        <span class="tagspan">DS Status :</span>
                        <span style="padding-left:0px;" class="DS-status-text">@Model.searchViewModel.DSStatus.Replace(",", ", ")</span>
                    </div>
                }


                @if (Model.searchViewModel.OrderStatus != "")
                {
                    <div class="row">
                        <span class="tagspan">SC Status :</span>


                        @foreach (var item in Model.searchViewModel.OrderStatus.Split(","))
                        {

                            @switch (item)
                            {
                                case "1":
                                    <label style="padding-left:0px;" value="@item" class="SC-status-text">InProcess or Completed </label>

                                    break;
                                case "2":
                                    <span style="padding-left:0px;" value="@item" class="SC-status-text">InProcess or Hold </span>
                                    break;

                                case "4":
                                    <span style="padding-left:0px;" value="@item" class="SC-status-text">ShoppingCart </span>
                                    break;
                                case "5":
                                    <span style="padding-left:0px;" value="@item" class="SC-status-text">InProcess </span>
                                    break;
                                case "6":
                                    <span style="padding-left:0px;" value="@item" class="SC-status-text">Completed </span>
                                    break;
                                case "7":
                                    <span style="padding-left:0px;" value="@item" class="SC-status-text">ProblemOrder </span>
                                    break;
                                case "8":
                                    <span style="padding-left:0px;" value="@item" class="SC-status-text">OnHold </span>
                                    break;
                                case "9":
                                    <span style="padding-left:0px;" value="@item" class="SC-status-text">Quote </span>
                                    break;
                                case "10":
                                    <span style="padding-left:0px;" value="@item" class="SC-status-text">void </span>
                                    break;
                                case "11":
                                    <span style="padding-left:0px;" value="@item" class="SC-status-text">Canceled </span>
                                    break;



                            }
                            <span>,&nbsp; </span>

                        }




                    </div>
                }
                @if (Model.searchViewModel.PaymentStatus != "")
                {
                    <div class="row">
                        <span class="tagspan">Payment Status :</span>
                        <span style="padding-left:0px;" class="Py-status-text">@Model.searchViewModel.PaymentStatus.Replace(",", ", ")</span>
                    </div>
                }
                <div class="card-body">
                    @using (Html.BeginForm("BestBuOrdersDetail", "BestBuyProduct", FormMethod.Get, new { @class = "form-inline" }))
                    {


                        <select id="multiselect" class="3col active form-control  mb-2 mr-sm-2 marketPlaces" multiple="multiple">
                            <option value="BestBuy">BestBuy</option>
                            <option value="Amazon">Amazon</option>
                        </select>

                        <select id="SCStatus_ID" class="2col active form-control  mb-2 mr-sm-2 SCOrderStatues" multiple="multiple">
                            <option value="1">InProcess or Completed</option>
                            <option value="2">InProcess or Hold</option>
                            <option value="4">ShoppingCart</option>
                            <option value="5">InProcess</option>
                            <option value="6">Completed</option>
                            <option value="7">ProblemOrder</option>
                            <option value="8">OnHold</option>
                            <option value="9">Quote</option>
                            <option value="10">void</option>
                            <option value="11">Canceled</option>

                        </select>

                        <select id="multiselect" class=" 3col active form-control  mb-2 mr-sm-2 PaymentStatus" multiple="multiple">
                            <option value="Charged">Charged</option>
                            <option value="FullRefund">Full Refund</option>
                            <option value="PartiallyRefund">Partially Refund</option>
                            <option value="NoPayment">No Payment</option>
                        </select>
                        <select id="multiselect" class="2col active form-control  mb-2 mr-sm-2 DropShipStatues" multiple="multiple">
                            <option value="None">DS None</option>
                            <option value="Requested">DS Requested</option>
                        </select>

                        <select id="multiselect" class="2col active form-control  mb-2 mr-sm-2 zincStatues" multiple="multiple">
                            <option value="OrderRequestSent">Order Request Sent</option>
                            <option value="Error">Error</option>
                            <option value="InProcess">InProcess</option>
                            <option value="InProgressSuccess">InProgress (Success)</option>
                            <option value="Shipped">Shipped</option>
                            <option value="Processed_OutSideZinc">Processed OutSide Zinc</option>
                        </select>

                        <select id="TagFilter" class="2col active form-control  mb-2 mr-sm-2 TagStatues" multiple="multiple"></select>

                        <input type="text" style="margin-right: 5px;box-shadow: none !important;width:88px" name="sku" autocomplete="off" class="form-control" value="@Model.searchViewModel.Sku" placeholder="SKU" />

                        @*<input type="text" style="margin-right: 5px;box-shadow: none !important;width:88px" placeholder="From Date" autocomplete="off" class="col-sm-1 form-control" value="@Model.searchViewModel.DateFrom" name="orderDateTimeFrom" id="orderDateTimeFrom" />

                            <input type="text" style="margin-right: 1px;box-shadow: none !important;width:88px" placeholder="To Date" autocomplete="off" class="col-sm-1 form-control" value="@Model.searchViewModel.DateTo" name="orderDateTimeTo" id="orderDateTimeTo" />*@


                        <div id="reportrange" style="background: #fff; cursor: pointer; border: 1px solid #ccc;">
                            <i class="fa fa-calendar"></i>&nbsp;
                            <span></span> <i class="fa fa-caret-down"></i>
                        </div>


                        <input type="hidden" id="ddlShipingOrderStatus" name="OrderStatus">
                        <input type="hidden" name="marketPlaceValues" id="ddlMarketPlace" />
                        <input type="hidden" name="ZincStatus" id="ddlZincStatusValues" />
                        <input type="hidden" name="DSStatus" id="ddlDSStatusValues" />
                        <input type="hidden" name="PaymentStatus" id="ddlPaymentStatus" />
                        <input type="hidden" name="ShippingTags" id="ddlShippingTags" />
                        <input type="hidden" name="orderDateTimeFrom" id="orderDateTimeFrom" />
                        <input type="hidden" name="orderDateTimeTo" id="orderDateTimeTo" />

                        <button class="ml-1 btn btn-primary" type="submit" id="btnSearchOrder">Search</button>


                        <div class=" col-md-2">

                            <button class="btn btnup bg-primary" data-toggle="modal" data-target="#
                                    " id="btnUpdateProductImages" style="color: #fff;" type="button">Update SC Orders</button>
                            <span>
                                <img style="display:none;" class="UpdateASINButtonLoaderForOrderStatus" height="25px" width="25px" src="~/Images/loadingImage.gif" />
                            </span>

                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>
<div class="container-fluid ">

    <div class="row col col-12" id="fixActionMenu">
        <div class="col col-md-2">
            <div class="row">
                <div class="pagination col-md-6 col">

                </div>

            </div>
        </div>
        <div class="col col-md-2">
            <span> Total Orders Found : @ViewBag.TotalCount</span>
        </div>


        <div class=" col col-md-2">
            <select class="js-example-basic-single" id="ActionMenu" name="state">
                <optgroup label="SC Order Status">
                    <option value="AK">-----</option>
                </optgroup>
                <optgroup label="DS Status">
                    <option value="DS_Requested_To_None">DS Requested To None</option>
                </optgroup>
                <optgroup label="BB Status">
                    <option value="AK">-----</option>
                </optgroup>
            </select>

        </div>
        <div class="col-md-1">
            <button type="button" id="ApplyActionMenu" class="btn btngoo bg-success" style="color: #fff;
    margin-top: 2px;">
                GO
            </button>
            <span>
                <img style="display:none;" class="ButtonLoader" height="25px" width="25px" src="~/Images/loadingImage.gif" />
            </span>
        </div>
        <div class=" col-md-2">

            <button class="btn btnup bg-primary" id="btnGetSCOrderStatus" style="color: #fff;" type="button">Get SC Status</button>
            <span>
                <img style="display:none;" class="GetSCOrderStatusloader" height="25px" width="25px" src="~/Images/loadingImage.gif" />
            </span>

        </div>

    </div>
</div>
<div class="container-fluid">
    <div id="loadOrder">

    </div>
</div>
<div class="container-fluid">
    <div class="pagination">

    </div>
</div>

<div class="modal fade" id="myModalCreditCard" style="margin-top:140px">
    <div class="modal-dialog">
        <div class="modal-content">

            <!-- Modal Header -->
            <div class="modal-header">
                <h6 class="modal-title"><b>Credit Card Detail</b></h6>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>

            <!-- Modal body -->
            <div class="modal-body">
                <label><span style="font-weight:bold">Account Name:</span>&nbsp<span id="accountname"></span></label><br />
                <label><span style="font-weight:bold">Credit Card Name:</span>&nbsp<span id="creditcardname"></span></label><br />


            </div>

            <!-- Modal footer -->
            <div class="modal-footer">
                <button type="button" class="btn btn-dark" data-dismiss="modal">Close</button>
            </div>

        </div>
    </div>
</div>

<div class="modal fade" id="myModal" role="dialog" style="margin-top: 80px!important;">
    <div class="modal-dialog modal-lg">
        <!-- Modal content-->
        <div class="modal-content" style="width:88%!important">
            <div class="modal-header">
                <h4 class="modal-title">Status</h4>
                <button type="button" class="close" data-dismiss="modal">&times;</button>

            </div>
            <div class="modal-body" id="modelBody">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>

    </div>
</div>

<div class="container-fluid">
    <div class="modal fade" id="NotesModel" role="dialog" style="margin-top: 80px!important;">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header" id="NotesModalheader" style="display: inline-flex!important;justify-content: flex-start!important;">

                </div>
                <div class="modal-body ">
                    <div class="list" style="margin-bottom: 30px;overflow-y:auto;height:270px">

                    </div>
                    <form class="form-inline" id="notesmodelform">
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-link closed" style="color: grey;
    text-decoration: none;clear: both;">
                        Close
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="myModalQTY" role="dialog" style="margin-top: 80px!important;">
    <div class="modal-dialog modal-lg">
        <!-- Modal content-->
        <div class="modal-content" style="width:88%!important">
            <div class="modal-header">
                <strong style="">
                    <i class="fa fa-exclamation-triangle" style="color:red"></i><span style="vertical-align: text-top;margin-left: 4px;
">Error!</span>
                </strong>

                <button type="button" class="close" data-dismiss="modal">&times;</button>

            </div>
            <div class="modal-body" id="modelBodyQTY">
                <div class="row">
                    <h6 style="padding-left:17px">Order status is not suitable to send to zinc.</h6>

                </div>
                
                @*<div class="lblSellerCloudOrderStatus">
                    1: <span style="color:blue;"></span>
                </div>
               
                <div class="checkSellerCloudOrderStatus">
                    2: <span style="color:blue;"></span>
                </div>
                
                <div class="paymentStatus">
                    3: <span style="color:blue;"></span>
                </div>*@
              
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>

    </div>
</div>
<div class="modal fade" id="myModalERR" role="dialog" style="margin-top: 80px!important;">
    <div class="modal-dialog modal-lg">
        <!-- Modal content-->
        <div class="modal-content" style="width:88%!important">
            <div class="modal-header">
                <strong style="margin-left: 17px;">
                    <i class="fa fa-exclamation-triangle" style="color:orange"></i><span style="vertical-align: text-top;margin-left: 4px;
">Warning!</span>
                </strong>
               
                <button type="button" class="close" data-dismiss="modal">&times;</button>

            </div>
            <div class="modal-body" id="modelBodyERR">
                
               

                    <h6 style="padding-left:17px">Stock is available in default warehouse, please ensure prior to sending order to Zinc</h6>
                    <h6 style="padding-left:17px"><b>WHQ: </b><span class="WHQQTY" style="color:cadetblue"></span></h6>
                   
                

            </div>
            <div class="modal-footer">
                <div class="row col-md-12 p-0">
                    <div class="col-md-6 p-0">
                        <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
                    </div>
                    <div class="col-md-6">
                        <a class="btn btn-success m-1" id="sellerstatus" target="_blank" style="float:right;color:white">Proceed!</a>
                    </div>


                </div>
            </div>
        </div>

    </div>
</div>

@section Scripts{
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script src="~/sticky-table-headers/js/jquery.stickytableheaders.min.js"></script>
    <script src="~/lib/jQuery-Paging/jquery.paging.min.js"></script>
    <script src="~/lib/jQuery-MultiSelect/jquery.multiselect.js"></script>
    <script src="~/select2/js/select2.full.min.js"></script>

    <script src="~/lib/date-range-picker/moment.min.js"></script>
    <script src="~/lib/date-range-picker/daterangepicker.js"></script>
    <script type="text/javascript">
        var JsonDataOfOrder = "";
        var RadioButtonASIN = "";
        var sendToZincReferenceAferSubmit = "";
        var minValue = "";
        var selectedDateFrom = "";
        var selectedDatTo = "";


        $(document).ready(function () {
            //  $(function () {

            $(document).on('click', '.btnViewCreditDetail', function () {
                var AccountId = $(".btnViewCreditDetail").attr("data-AccountId");
                var CreditCardId = $(".btnViewCreditDetail").attr("data-CreditCard");
                $.ajax({
                    type: 'GET',
                    url: '../BestBuyProduct/CreditCardDetail?CardId=' + CreditCardId + '&AccountId=' + AccountId,
                    contentType: 'application/json',
                    success: function (res) {
                        $("#accountname").text(res.AccountName);
                        $("#creditcardname").text(res.CardName);
                        $("#myModalCreditCard").modal('show');
                    }
                });

            });

            function GetCreditCardDetail() {
                var Id = 0;

            }

            var start = moment().subtract(7, 'days');
            var end = moment();

            function cb(start, end) {

                $('#reportrange span').html(start.format('MMMM D, YYYY') + ' - ' + end.format('MMMM D, YYYY'));

            }

            $('#reportrange').daterangepicker({
                startDate: start,
                endDate: end,
                ranges: {
                    'Today': [moment(), moment()],
                    'Yesterday': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],
                    'Last 7 Days': [moment().subtract(6, 'days'), moment()],
                    'Last 30 Days': [moment().subtract(29, 'days'), moment()],
                    'This Month': [moment().startOf('month'), moment().endOf('month')],
                    'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]
                }
            }, cb);



            cb(start, end);

     //   });

            $.fn.checkUncheckSKU_checkbox = function (status) {
                $(document).find('.SCOrderCheckbox').each(function (index) {
                    $(this).attr('checked', status);
                });
            }

            $('.js-example-basic-single').select2();

            var Url = '/Tag/TagListForAssign/';
            $("#TagFilter").empty();
            $.ajax({
                type: 'Get',
                url: Url,
                dataType: 'json',
                traditional: true,
                success: function (data) {
                    $.each(data, function (key, value) {
                        $("#TagFilter").append($("<option></option>").val(value.TagId).html(value.TagName));
                    })
                    //$('#TagFilter').multiselect({
                    //    includeSelectAllOption: true
                    //});
                    multis();
                }
            })
            // action menu
            function multis() {
                $('select[multiple].active.2col.TagStatues').multiselect({
                    columns: 1,
                    placeholder: 'Tag',


                    maxPlaceholderOpts: 1,

                    selectAll: false,
                    onOptionClick: function (element, option) {
                        $('#ddlShippingTags').val($(element).val());
                    }
                });
            }
            // action menu


            $('#ApplyActionMenu').click(function (event) {
                var imageProcessing = $(this).closest('div').find('.ButtonLoader');
                $(imageProcessing).css('display', 'inline');
                event.preventDefault();
                var searchIDForDS_Requested = [];
                var searchIDForDS_None = [];
                var actionMenu  = $('#ActionMenu option:selected').val();


                $(document).find('#tableOrderList .SCOrderCheckbox:checked').map(function () {
                    var zincStatus = $(this).closest('tr').find('.zincStatus').text().trim();
                    if (zincStatus.indexOf("Requested") >= 0) {
                        searchIDForDS_Requested.push($(this).val());
                    }
                    else {
                        searchIDForDS_None.push($(this).val());
                    }
                });

                if (typeof searchIDForDS_None !== 'undefined' && searchIDForDS_None.length > 0) {
                    $(imageProcessing).css('display', 'none');
                    $('#modelBody').html("Please Select only DS Requested Orders.These below orders are in DS None status <br>" + searchIDForDS_None);
                    $('#myModal').modal('show');
                }
                else {
                    if (typeof searchIDForDS_Requested !== 'undefined' && searchIDForDS_Requested.length > 0) {
                        $.ajax({
                            type: 'Get',
                            url: '@Url.Action("ActionMenu", "SellerCloud")',
                            data: { actionMenuName: actionMenu, sellerCloudIds: searchIDForDS_Requested },
                            dataType: 'json',
                            traditional: true,
                            success: function (data) {
                                $(imageProcessing).css('display', 'none');
                                if (data.DSStatus) {
                                    $.notify(data.message, { globalPosition: 'right middle', className: 'success' });
                                }
                                setTimeout(function () {
                                    window.location.reload();
                                }, 5000);
                            }
                        });
                    }
                }
            });
             //alert("DropShip Requested :"+searchIDForDS_Requested);
                    //alert("DropShip None :"+ searchIDForDS_None);

            $('#myModal').modal('hide');

            $("#orderDateTimeFrom").datepicker({ dateFormat: 'yy-mm-dd' });


            $("#orderDateTimeTo").datepicker({ dateFormat: 'yy-mm-dd' });


            var getUrlParameter = function getUrlParameter(sParam) {
                var sPageURL = window.location.search.substring(1),
                    sURLVariables = sPageURL.split('&'),
                    sParameterName,
                    i;

                for (i = 0; i < sURLVariables.length; i++) {
                    sParameterName = sURLVariables[i].split('=');

                    if (sParameterName[0] === sParam) {
                        return sParameterName[1] === undefined ? true : decodeURIComponent(sParameterName[1]);
                    }
                }
            };
            var order_id = getUrlParameter('order_id');
            var sellerCloudID = getUrlParameter('sellerCloudID');
            var CustomerName = getUrlParameter('CustomerName');
            var ZincStatusQuerString = getUrlParameter('ZincStatus');
            var OrderStatus = getUrlParameter('OrderStatus');
            var OrderDateTimeFrom = getUrlParameter('orderDateTimeFrom');
            var OrderDateTimeTo = getUrlParameter('orderDateTimeTo');
            var DSStatus = getUrlParameter('DSStatus');
            var sku = getUrlParameter('sku');
            var PaymentStatus = getUrlParameter('PaymentStatus');
            var ShippingTags = getUrlParameter('ShippingTags');

            var pageNo = 0;

            $('#reportrange').on('apply.daterangepicker', function (ev, picker) {

                 selectedDateFrom = picker.startDate.format('YYYY-MM-DD');
                 selectedDatTo = picker.endDate.format('YYYY-MM-DD');

            });

            //search BetBuy Orders

                $('#btnSearchOrder').click(function () {
                    $('#ddlShipingOrderStatus').val();
                    $('#ddlMarketPlace').val();
                    $('#ddlZincStatusValues').val();
                    $('#ddlDSStatusValues').val();
                    $('#PaymentStatus').val();
                    $('#ddlShippingTags').val();
                    $('#orderDateTimeFrom').val(selectedDateFrom);
                    $('#orderDateTimeTo').val(selectedDatTo);


                 });



            $('body').on('click', 'span.ShipmentDate', function () {

                $('.AssesndingButtonLoader').css('display', 'inline');
                var sortValue = $(this).attr('data-value')

                var url = '/BestBuyProduct/BBorderPartialView?page=' + pageNo + ''
                var completURL = url + '&order_id=' + order_id + '&sellerCloudID=' + sellerCloudID + '&CustomerName=' + CustomerName + '&sort=' + sortValue;

                $.get(completURL).done(function (response) {
                    $('#loadOrder').empty();
                    $('.AssesndingButtonLoader').css('display', 'none');
                    $('#loadOrder').html(response);

                    //$('#tableOrderList').stickyTableHeaders({ fixedOffset:0 });
                });

            });

            function updateASINLINKK() {
             

                    var mainTr = $(this).closest('tr');
                    var zincDetailDiv = $(mainTr).find(".zincDetailDiv");
                    var zincloader = $(mainTr).find(".UpdateASINButtonLoader");
                    $(zincloader).css('display', 'block');
                    var dataURL = $(this).attr('data-url');
                    $.get(dataURL).done(function (response) {
                        $(zincloader).css('display', 'none');
                        $(zincDetailDiv).empty();
                        $(zincDetailDiv).html(response);
                    });
                
            }
            // update asin
            $(document).on("click", ".updateASINLink", function () {

               var mainTr = $(this).closest('tr');
               var zincDetailDiv = $(mainTr).find(".zincDetailDiv");
                var zincloader = $(mainTr).find(".UpdateASINButtonLoader");
               $(zincloader).css('display', 'block');
                var dataURL = $(this).attr('data-url');
               $.get(dataURL).done(function (response) {
                   $(zincloader).css('display', 'none');
                    $(zincDetailDiv).empty();
                    $(zincDetailDiv).html(response);
                });
            });

            //updat asin max price
            $(document).on("click", ".updateASINLinkLatestGET", function () {
               
                var sku = $(this).attr('data-SKU');
                var RadioButtonASINChecked = $(this).closest('tr').find("input:radio[name='choice']:checked");
                radioSKU = $(RadioButtonASINChecked).attr('value');
                var isRadioButtonChecked = $(RadioButtonASINChecked).is(':checked');
                RadioButtonASIN = $(RadioButtonASINChecked).attr('data-ASIN')
                bestbuyid = $(RadioButtonASINChecked).attr('data-id')
                var mainTr = $(this).closest('tr');
                var zincDetailDiv = $(mainTr).find(".zincDetailDiv");
                var zincloader = $(this).closest("div").find(".updateASINLinkLatest");
                var asinselect = $(this).closest("div").find(".selectasin");
                $(zincloader).css('display', 'block');
               
                if (isRadioButtonChecked == true && sku == radioSKU) {

                    $(asinselect).closest("div>").find(".selectasin").css('display', 'none');
                    $.ajax({
                        type: "POST",
                        url: '/Zinc/GetProductOfferDataFromZincAndUpdate?orderid=' + RadioButtonASIN + '&ProductSKU=' + sku + '&bbZincID=' + bestbuyid,
                        success: function (data) {
                            $(asinselect).closest("div>").find(".selectasin").css('display', 'none');
                            $(zincloader).css('display', 'none');
                            if (data!=null) {
                                $(RadioButtonASINChecked).closest("div").find(".amazon_price").text("$" + data.itemprice / 100);
                                var maxprice = data.itemprice * 1.25 / 100;
                                $(RadioButtonASINChecked).closest("div").find(".max_price").text("$" + maxprice.toFixed(2));
                                $(RadioButtonASINChecked).attr("data-MaxPrice");
                                updateASINLINKK();
                               
                                //$(RadioButtonASINChecked).closest("div").find(".amazon_price").text("habib");
                                //$(RadioButtonASINChecked).closest("div").find(".max_price").text("shafique");
                                //$(RadioButtonASINChecked).attr("data-MaxPrice");
                            }
                            else {
                               
                            }
                        }
                    });



                }
                else {
                   
                    $(asinselect).closest("div").find(".selectasin").css('display','inline-block');
                    $(zincloader).css('display', 'none');
                }
            });
            //send to Zinc (Save Order to Zinc)

            function GetstatusfromSellerCloud() {
                $('#myModalERR').modal('hide');
                //sendToZincReferenceAferSubmit = $(this);
                $(".loadertbl").show();

                var sku = $(sendToZincReferenceAferSubmit).attr('data-SKU');

                var RadioButtonASINChecked = $(sendToZincReferenceAferSubmit).closest('tr').find("input:radio[name='choice']:checked");
                radioSKU = $(RadioButtonASINChecked).attr('value');
                var isRadioButtonChecked = $(RadioButtonASINChecked).is(':checked');
                RadioButtonASIN = $(RadioButtonASINChecked).attr('data-ASIN')
                var RadioButtonMaxPrice = $(RadioButtonASINChecked).attr('data-MaxPrice')

                var profitlosedetail = $(sendToZincReferenceAferSubmit).attr('data-profitlosedetail');
                var profitpercentagedetail = $(sendToZincReferenceAferSubmit).attr('data-profitpercentagedetail');
                var OrderDetailID = $(sendToZincReferenceAferSubmit).attr('data-OrderDetailID');

                var OrderId = $(sendToZincReferenceAferSubmit).attr('data-OrderId');
                var URL = '/Zinc/SendOrderToZinc';
                var SellerCloudOrderId = $(sendToZincReferenceAferSubmit).attr('data-SellerCloudOrderId');
                //var Url = '/SellerCloud/GetOrderStatus/';
                var Url = '/SellerCloud/GetOrdersFromSCRest/';
                $.ajax({
                    type: 'Get',
                    url: Url,
                    data: { orderid: SellerCloudOrderId },
                    dataType: 'json',
                    traditional: true,
                    success: function (data) {
                        $(".loadertbl").hide();
                        if (data.DropshipStatus == 0 && data.OrderStatus == 2 && data.PaymentStatus == 30) {
                            $.ajax({
                                type: 'Get',
                                url: URL,
                                data: { ASIN: RadioButtonASIN, MaxPrice: RadioButtonMaxPrice, orderid: OrderId, SellerOrderID: SellerCloudOrderId, orderDetailID: OrderDetailID },
                                dataType: 'json',
                                traditional: true,
                                success: function (data) {
                                    JsonDataOfOrder = data;
                                    $.get('@Url.Action("ConfirmationOfZincOrder", "Zinc")', { JsonData: JsonDataOfOrder, profitlose: profitlosedetail, percentage: profitpercentagedetail }).done(function (response) {

                                        $('#modelBody').empty();
                                        $('#modelBody').html(response);

                                        var successMessage = $('#modelBody').find('.successmessage');
                                        $(successMessage).hide()


                                        $('#myModal').modal('show');
                                    });

                                }
                            });
                        }
                        else {
                            $('#myModalQTY').modal('show');
                           
                            //$('#modelBodyQTY').find('.lblSellerCloudOrderStatus>span').append(data.scOrderStatus);
                            //$('#modelBodyQTY').find('.checkSellerCloudOrderStatus>span').append(data.DropshipStatus);
                            //$('#modelBodyQTY').find('.paymentStatus>span').append(data.PaymentStats);
                        }
                    }
                });
            }
            
            function zendToZinc() {
                debugger
                $('#modelBodyERR').find('.WHQQTY').empty();
                //mychange
                sendToZincReferenceAferSubmit = $(this);

                var sku=$(this).attr('data-SKU');
                $(".loadertbl").show();
                var RadioButtonASINChecked = $(this).closest('tr').find("input:radio[name='choice']:checked");
                radioSKU=$(RadioButtonASINChecked).attr('value');
                var isRadioButtonChecked = $(RadioButtonASINChecked).is(':checked');
                  RadioButtonASIN = $(RadioButtonASINChecked).attr('data-ASIN')
                var RadioButtonMaxPrice = $(RadioButtonASINChecked).attr('data-MaxPrice')
                if (isRadioButtonChecked == true && sku== radioSKU) {

                    var profitlosedetail = $(this).attr('data-profitlosedetail');
                    var profitpercentagedetail = $(this).attr('data-profitpercentagedetail');
                    var OrderDetailID = $(this).attr('data-OrderDetailID');

                    var OrderId = $(this).attr('data-OrderId');

                    var SellerCloudOrderId = $(this).attr('data-SellerCloudOrderId');
                    var URL = '/Zinc/SendOrderToZinc';
                   // var URLQTY = '/ProductWarehouseQty/UpdateWarehouseQuantityFromSellerCloudForOrderLIst';
                    var URLQTY = '/ProductWarehouseQty/UpdateWarehouseQuantityFromSellerCloudForOrderLIstForSingleWH';

                    $.ajax({
                        type: 'Get',
                        url: URLQTY,
                        data: { sku: sku },
                        dataType: 'json',
                        traditional: true,
                        success: function (data) {
                            
                            $.each(data, function (index, value) {
                                if (value.WarehouseID == 5) {
                                    if (value.AvailableQty > 0 && value.WarehouseID == 5) {
                                        $(".loadertbl").hide();
                                        $('#myModalERR').modal('show');
                                        $('#modelBodyERR').find('.WHQQTY').append(value.AvailableQty);
                                      
                                    }
                                    else if (value.AvailableQty <= 0 && value.WarehouseID == 5) {
                                        GetstatusfromSellerCloud();
                                    }
                                }

                            });

                        }
                    });

                }
                else {
                    $(".loadertbl").hide();
                    $('#modelBody').empty();
                    $('#modelBody').html("<div>Please Select ASIN to Send Order</div>");
                    $('#myModal').modal('show');
                }
            }
                                   //var StatusSC = $(document).on('click', '#sellerstatus', GetstatusfromSellerCloud(SellerCloudOrderId));

            $(document).on('click', '#sellerstatus', GetstatusfromSellerCloud);


            $(document).on('click', '#btnSendToZinc', zendToZinc);


            //update seller Cloud orders

            $('#btnUpdateProductImages').click(function () {

                $('#btnUpdateProductImages').attr('disabled', true);

                var URL = '/SellerCloud/SellerCloudSetting';
                $('.UpdateASINButtonLoaderForOrderStatus').css('display', 'inline');

                $.ajax({
                    type: 'Get',
                    url: URL,
                    data: {},
                    dataType: 'html',
                    traditional: true,
                    success: function (data) {
                        $('#btnUpdateProductImages').removeAttr('disabled');
                        $('.UpdateASINButtonLoaderForOrderStatus').css('display', 'none');
                        $('#modelBody').empty();
                        $('#modelBody').html(data);
                        $('#myModal').modal("show");
                        }
                });
            });



            //pagination
              $(".pagination").paging(parseInt('@ViewBag.TotalCount'), {
                  format: '[< nncnn >]',
                  perpage: 25, // show 10 elements per page
                  lapping: 0, // don't overlap pages for the moment
                  page: 1, // start at page, can also be "null" or negative
                    stepwidth: 0, // =0 means blockwise next/prev steps
                  onSelect: function (page) {

                      pageNo = page;
                        // add code which gets executed when user selects a page
                        var url = '/BestBuyProduct/BBorderPartialView?page=' + page + ''
                      var completURL = url + '&order_id=' + order_id + '&sellerCloudID=' + sellerCloudID + '&CustomerName=' + CustomerName + '&ZincStatus=' + ZincStatusQuerString + '&OrderStatus=' + OrderStatus + '&OrderDateTimeFrom=' + OrderDateTimeFrom + '&orderDateTimeTo=' + OrderDateTimeTo + '&sku=' + sku + '&DSStatus=' + DSStatus + '&PaymentStatus=' + PaymentStatus + '&ShippingTags=' + ShippingTags;
                      $(".loadertbl").show();

                      $.ajax({
                          url: completURL,
                          data: {  },
                          type: 'POST',
                          traditional: true,
                          success: function (data) {
                              $('#loadOrder').empty();
                              $('#loadOrder').html(data);
                              $(".loadertbl").hide();
                           // $('#tableOrderList').stickyTableHeaders({ fixedOffset: 0 });
                          }
                      });
                      if (typeof OrderDateTimeFrom !== "undefined" && typeof OrderDateTimeTo !== "undefined"  )
                      {
                          if (OrderDateTimeFrom !== "" && OrderDateTimeTo !== "") {
                              start = moment(OrderDateTimeFrom);
                              end = moment(OrderDateTimeTo);

                              cb(moment(OrderDateTimeFrom), moment(OrderDateTimeTo));
                          }
                          else
                          {
                              $('#reportrange span').html("No Date Selected");
                          }

                      }
                      else {
                          $('#reportrange span').html("No Date Selected");
                      }


                      //$.get(completURL).done(function (response) {
                      //      $('#loadOrder').empty();
                      //      $('#loadOrder').html(response);

                      //      $('#tableOrderList').stickyTableHeaders({ fixedOffset: 65 });
                      //  });
                    },
                    onFormat: function (type) {
                        switch (type) {
                            case 'block': // n and c
                                if (this.page === this.value) {
                                    return '<span>' + this.value + '</span>';
                                } else {
                                    return '<a href="#">' + this.value + '</a>';
                                }
                            case 'next': // >
                                return '<a href="#">&gt;</a>';
                            case 'prev': // <
                                return '<a href="#">&lt;</a>';
                            case 'first': // [
                                return '<a href="#">First</a>';
                            case 'last': // ]
                                return '<a href="#">Last</a>';
                        }
                  }


                });


            $('select[multiple].active.3col.marketPlaces').multiselect({
                columns: 1,
                placeholder: 'Maketplaces',

                maxPlaceholderOpts: 1,

                selectAll: false,
                onOptionClick: function (element, option) {
                    $('#ddlMarketPlace').val($(element).val());
                    $(element).val();
                },

            });

            $('select[multiple].active.2col.SCOrderStatues').multiselect({
                columns: 1,
                placeholder: 'SC Order Status',

                maxPlaceholderOpts: 1,

                selectAll: false,
                onOptionClick: function (element, option) {
                    $('#ddlShipingOrderStatus').val($(element).val());
                }

            });

            $('select[multiple].active.2col.zincStatues').multiselect({
                columns: 1,
                placeholder: 'Zinc Order Status',

                maxPlaceholderOpts: 1,

                selectAll: false,
                onOptionClick: function (element, option) {

                    $('#ddlZincStatusValues').val($(element).val());
                }
            });

            $('select[multiple].active.2col.DropShipStatues').multiselect({

                columns: 1,
                placeholder: 'DS Status',

                maxPlaceholderOpts: 1,

                selectAll: false,
                onOptionClick: function (element, option) {

                    $('#ddlDSStatusValues').val($(element).val());
                }
            });

            $('select[multiple].active.3col.PaymentStatus').multiselect({
                columns: 1,
                placeholder: 'Payment Status',

                maxPlaceholderOpts: 1,

                selectAll: false,
                onOptionClick: function (element, option) {
                    $('#ddlPaymentStatus').val($(element).val());
                    $(element).val();
                },
            });



            // add form-control class to multiselect dropdown list

            $('#searchForm').find('button').addClass('form-control');


            // update tracking information after seller cloud order is fully shipped

            $(document).on('click', 'a.sendTrackingToSC', function () {
                debugger;
                var sendTrackingToSC = $(this);
                var mainTR = $(sendTrackingToSC).closest('tr');
                var loader = $(sendTrackingToSC).next('span').find('img');
                $(loader).css('display', 'inline');
                var _sellerCloudOrderId = $(sendTrackingToSC).attr('data-SellerCloudOrderId');
                var _zincOrderLogDetailID = $(sendTrackingToSC).attr('data-ZincOrderLogDetailID');
                var _itemQuantity = $(sendTrackingToSC).attr('data-itemQuantity');
                var _productSku = $(sendTrackingToSC).attr('data-productSku');
                var SCTrackingStatus = $(mainTR).find('.SCTrackingStatus');
                var sendTrackingToSC = $(mainTR).find('.sendTrackingToSC');

                var Url = '/SellerCloud/SendTrackingToSC/';
                $.ajax({
                    url: Url,
                    data: { sellerCloudOrderId: _sellerCloudOrderId, zincOrderLogDetailID: _zincOrderLogDetailID, itemQuantity: _itemQuantity, productSku: _productSku},
                    type: 'Get',
                    traditional: true,
                    success: function (data) {
                        if (data.success) {
                            $(loader).css('display', 'none');
                            $(SCTrackingStatus).css('display', 'block');
                            $(sendTrackingToSC).css('display', 'none');
                        }
                    }
                });

            });
            $(window).scroll(function () {
                var scroll = $(window).scrollTop();
                if (scroll >= 300) {
                    $(".myclass").addClass("tbladd")
                }
                else if (scroll <= 0) {
                    $(".myclass").removeClass("tbladd")
                }
            });
            $(document).find("#orderDateTimeShip").datepicker({ dateFormat: 'yy-mm-dd' });
            //send best buy order to ZINC
            $(document).on('click', '#btnSendBestBuyOrderToZinc', function () {


                var dataID = $(this).attr('data-id');
                var scOrderID = $(this).attr('data-scOrderID');
                var orderDateTimeShip = $('#orderDateTimeShip').val();

                var disableButton = $(this);
                $(disableButton).attr('disabled', true);
                var rootDivOfButton=$(disableButton).parents('.findParent');

                $(sendToZincReferenceAferSubmit).css('display', 'none');

                var mainTR = $(sendToZincReferenceAferSubmit).closest('tr');
                var mainAnchor = $(mainTR).find(".showZincOrderID a");
                var zincReteriveOrder=$(mainTR).find('#ZincOrderReterive');
                var orderStatus = $(mainTR).find('.ShowZincOrderLatestStatus');
                var processedOutSideZinc = $(mainTR).find('.processedOutSideZinc');
                var lockZincOrder = $(sendToZincReferenceAferSubmit).closest('div').find('#imgLockZincOrder');
                $(rootDivOfButton).find('.successmessage').show();
                // console.log(JsonDataOfOrder);
                debugger;
                var CreditCardId = $('#CreditCardDetailId').val();
                var ZincAccountId = $('#ZincAccountsId').val();
                var DeliveryDays = $('#DeliveryDays').val();

                var Url = '/Zinc/SubmitOrderToZinc/';
                $.ajax({
                    url: Url,
                    data: { ZincOrderdata: JsonDataOfOrder, orderDateTimeShip: orderDateTimeShip, CreditCardId: CreditCardId, ZincAccountId: ZincAccountId, DeliveryDays: DeliveryDays},
                    type: 'POST',
                    traditional: true,
                    //contentType: 'application/json',
                    success: function (data) {
                        if (data.requestid != "") {
                            var gettingHref = $(mainAnchor).attr('href');
                            $(mainAnchor).attr('href', gettingHref + data.requestid)

                            if ($(zincReteriveOrder).length) {
                                $(zincReteriveOrder).attr("data-zincorderlogid", data.zincorderlogid);
                                $(zincReteriveOrder).attr("data-zincrequestid", data.zincrequestid);
                                $(zincReteriveOrder).css('display', 'block');
                                $(orderStatus).text('Order Request Sent').css({ 'color': 'blue', 'display': 'inline' });
                                if ($(processedOutSideZinc).length) {
                                    $(processedOutSideZinc).css('display', 'none');
                                }
                            }

                            $(mainAnchor).css('display', 'inline');
                        }
                    }
                });

                //commented code for display lock icone

            //$(lockZincOrder).css('display', 'inline');
            //    $(lockZincOrder).attr('data-status', false);

            });


            $('body').on('click', 'a#checkSellerCloudOrderStatus', function () {

                var sellerCloudOrderId = $(this).attr('data-id');
                var loader = $(this).closest('td').find('.ButtonLoader');
                var zincStatus = $(this).closest('td').find('.zincStatus');
                var btnSendToZinc=$(this).closest('tr').find('#btnSendToZinc');
                $(loader).css('display', 'block');
                var Url = '/SellerCloud/GetOrderStatus/';
                $.ajax({
                    type: 'Get',
                    url: Url,
                    data: { orderid: sellerCloudOrderId },
                    dataType: 'json',
                    traditional: true,
                    success: function (data) {
                        if (data.status) {
                            $(loader).css('display', 'none');
                            if (data.DropshipStatus != 'None') {
                                $(btnSendToZinc).css('display', 'none');
                            }
                            if (data.DropshipStatus == "None") {
                                $("." + sellerCloudOrderId).parent().find('.zincStatus').css('color', 'blue').text("DS " + data.DropshipStatus);
                            }
                            else if (data.DropshipStatus == "Requested") {
                                $("." + sellerCloudOrderId).parent().find('.zincStatus').css('color', 'orange').text("DS " + data.DropshipStatus);
                            }
                            else {
                                $("." + sellerCloudOrderId).parent().find('.zincStatus').text("DS " + data.DropshipStatus);
                            }

                            if (data.scOrderStatus == "InProcess") {
                                $("." + sellerCloudOrderId).css('color','blue').text(data.scOrderStatus);
                            }
                            else if (data.scOrderStatus == "Completed") {
                                $("." + sellerCloudOrderId).css({ "color": "white", "background-color": "green" }).text(data.scOrderStatus);
                            }
                            else if (data.scOrderStatus == "Canceled") {
                                $("." + sellerCloudOrderId).css({ "color": "white","background-color":"orange"}).text(data.scOrderStatus);
                            }
                            else if (data.scOrderStatus == "OnHold") {
                                $("." + sellerCloudOrderId).css("color", "red").text(data.scOrderStatus);
                            }
                            else {
                                $("." + sellerCloudOrderId).text(data.scOrderStatus);
                            }
                           // $(".zincStatus").text("DS "+data.DropshipStatus);

                            if (data.PaymentStats == "Charged") {
                                $("." + sellerCloudOrderId).parent().find('.paymentStatus').children('span').css('color', 'blue').text(data.PaymentStats);
                            }
                            else if (data.PaymentStats == "FullRefund") {
                                $("." + sellerCloudOrderId).parent().find('.paymentStatus').children('span').css({ 'color': 'white', 'background-color': 'red' }).text(data.PaymentStats);
                            }
                            else {
                                $("." + sellerCloudOrderId).parent().find('.paymentStatus').children('span').text(data.PaymentStats);
                            }
                        }
                        else {
                            $(loader).css('display', 'none');
                        }
                    }
                })
            });

            $(document).on('click', 'i.getToolTip', function () {

                var sellerCloudOrderId = $(this).attr('data-id');

                var spanElement=$(this).closest('td').find('span.showToolTipData');
                var Url = '/SellerCloud/GetSellerCloudOrderStatusLastestUpdate/';
                $.ajax({
                    type: 'Get',
                    url: Url,
                    data: { orderid: sellerCloudOrderId },
                    dataType: 'json',
                    traditional: true,
                    success: function (data) {
                        console.dir(data.OrderLatestUpdate)
                        $(spanElement).text(data.OrderLatestUpdate);
                        console.dir($(this).closest('td').find('span.showToolTipData').text(data.OrderLatestUpdate));
                    }
                })




                //'span.showToolTipData'
            });

            $(document).on('click', '#btnProcessedOutSideZinc', function () {
                var btnProcessedOutSideZinc = $(this);
                var btnSendToZinc=$(btnProcessedOutSideZinc).closest('tr').find('#btnSendToZinc');
                var ZincOrderLogID = $(btnProcessedOutSideZinc).attr('data-ZincOrderLogID');
                var processedOutSideZinc = $(btnProcessedOutSideZinc).closest('td').find('.processedOutSideZinc');
                var ShowZincOrderLatestStatus = $(btnProcessedOutSideZinc).closest('td').find('.ShowZincOrderLatestStatus');


                var Url = '/Zinc/ProcessedOutSideZinc/';
                $.ajax({
                    type: 'Get',
                    url: Url,
                    data: { zincOrderLogID: ZincOrderLogID },
                    dataType: 'json',
                    traditional: true,
                    success: function (data) {
                        if (data.message != "") {
                            $(btnProcessedOutSideZinc).css('display', 'none');
                            $(processedOutSideZinc).css('display', 'inline');
                            $(ShowZincOrderLatestStatus).css('display', 'none');
                            $(btnSendToZinc).css('display', 'none');
                        }
                    }
                });
            });


            $(document).on('click', '#ZincOrderReterive', function () {

                var zincOrderReterive = $(this);
                $(zincOrderReterive).attr('disabled', true);
                var loader = $(this).closest('td').find('.ZincOrderReteriveLoader');
                $(loader).css('display', 'inline');
                var ZincOrderLogID = $(this).attr('data-ZincOrderLogID');
                var SellerCloudID = $(this).attr('data-SellerCloudOrderId');
                var ZincRequestID = $(this).attr('data-ZincRequestID');
                var mainTR = $(zincOrderReterive).closest('tr');

                var Url = '/Zinc/ReteriveOrderStatusFromZinc/';
                $.ajax({
                    type: 'Get',
                    url: Url,
                    data: { zincOrderLogID: ZincOrderLogID, zincRequestID: ZincRequestID, sellerCloudID:SellerCloudID },
                    dataType: 'json',
                    traditional: true,
                    success: function (data) {

                        $(loader).css('display', 'none');
                        if (data.success) {

                            var showZincOrderStatus = $(mainTR).find('.ShowZincOrderLatestStatus');
                            var showZincOrderMessage = $(mainTR).find('.divZincOrderMessage');
                            var sendTrackingToSC = $(mainTR).find('.sendTrackingToSC');



                            $(showZincOrderStatus).attr('data-ZincOrderLogDetailID', data.zincOrderLogDetailID);
                            if (data.ZincStatus=="Error") {
                                $(showZincOrderStatus).text(data.ZincCode);
                                $(showZincOrderStatus).attr('data-ZincOrderLogDetailID', data.zincOrderLogDetailID);
                                $(showZincOrderStatus).attr('data-ZincOrderLogStatus', data.ZincStatus);
                                $(showZincOrderStatus).css('color', 'red');
                                $(showZincOrderStatus).css('display', 'inline');
                                $(zincOrderReterive).css('display', 'none');
                                $(mainTR).find('#btnSendToZinc').css('display', 'inline');
                                $(mainTR).find('#btnProcessedOutSideZinc').css('display', 'inline');
                            }
                            if (data.ZincStatus == "Canceled") {
                                $(showZincOrderStatus).text('Cancelled on Amz/Zinc');
                                $(showZincOrderStatus).attr('data-ZincOrderLogDetailID', data.zincOrderLogDetailID);
                                $(showZincOrderStatus).attr('data-ZincOrderLogStatus', data.ZincStatus);
                                $(showZincOrderStatus).css('color', 'mediumvioletred');
                                $(showZincOrderStatus).css('display', 'inline');
                                $(zincOrderReterive).css('display', 'none');
                                //$(mainTR).find('#btnSendToZinc').css('display', 'inline');
                                $(mainTR).find('#btnProcessedOutSideZinc').css('display', 'inline');
                                //$('a#checkSellerCloudOrderStatus').trigger('click');
                            }
                            if (data.ZincStatus == "InProcess") {
                                $(showZincOrderStatus).text(data.ZincStatus);
                                $(showZincOrderStatus).attr('data-ZincOrderLogDetailID', data.zincOrderLogDetailID);
                                $(showZincOrderStatus).attr('data-ZincOrderLogStatus', data.ZincStatus);
                                $(showZincOrderStatus).css('color', 'orange');
                                $(showZincOrderStatus).css('display', 'inline');
                                $(zincOrderReterive).css('display', 'inline');
                            }
                            if (data.ZincStatus == "InProgressSuccess") {
                                $(showZincOrderStatus).text('InProgress (Success)');
                                $(showZincOrderMessage).text(data.ZincMessage);
                                $(showZincOrderMessage).css('display', 'block');
                                $(showZincOrderStatus).attr('data-ZincOrderLogDetailID', data.zincOrderLogDetailID);
                                $(showZincOrderStatus).attr('data-ZincOrderLogStatus', data.ZincStatus);
                                $(showZincOrderStatus).css('color', 'green');
                                $(showZincOrderStatus).css('display', 'inline');
                                $(zincOrderReterive).css('display', 'inline');
                            }
                            if (data.ZincStatus == "Shipped") {
                                debugger;
                                $(sendTrackingToSC).css('display', 'block');
                                $(sendTrackingToSC).attr("data-ZincOrderLogDetailID", data.zincOrderLogDetailID);
                                $(showZincOrderStatus).text(data.ZincStatus);
                                $(showZincOrderMessage).css('display', 'none');
                                $(showZincOrderStatus).attr('data-ZincOrderLogDetailID', data.zincOrderLogDetailID);
                                $(showZincOrderStatus).attr('data-ZincOrderLogStatus', data.ZincStatus);
                                $(showZincOrderStatus).css('color', 'green');
                                $(showZincOrderStatus).css({ 'display': 'inline','cursor':'pointer','font-weight':'bold' });
                                $(zincOrderReterive).css('display', 'none');
                            }



                            $(zincOrderReterive).removeAttr('disabled');
                        }
                    }
                });




                //'span.showToolTipData'
            });

            // update asin
            $(document).on("click", ".ShowZincOrderLatestStatus", function () {

                var zincOrderStatus = $(this);
                var ZincOrderLogStatusType = $(zincOrderStatus).attr('data-ZincOrderLogStatus');
                var ZincOrderLogDetailID = $(zincOrderStatus).attr('data-ZincOrderLogDetailID');
                if (ZincOrderLogStatusType == "Shipped")
                {
                    $.get('@Url.Action("GetZincOrderLogDetailByID", "Zinc")', { zincOrderLogDetailID: ZincOrderLogDetailID, type: ZincOrderLogStatusType }).done(function (response) {
                        $('#modelBody').empty();
                        $('#modelBody').html(response);
                        $('#myModal').modal('show');
                    });
                }
            });

          $(document).on('click','a.close',function () {
                debugger;
                $(this).parent().hide();
                $('#myModal').modal('hide');
            });



            $(document).on('change', '#headerCheckBox', function () {

                var result = $(this).is(':checked');
                $.fn.checkUncheckSKU_checkbox(result)
                //$(document).find('.checkboxSkuForUpdating').each(function (index) {
                //        $(this).attr('checked', result);
                //    });
            });
            $.fn.checkUncheckSKU_checkbox = function (status) {
                $(document).find('.SCOrderCheckbox').each(function (index) {
                    $(this).attr('checked', status);
                });
            }

            $(document).on('click', '#btnGetSCOrderStatus', function () {


                var loader = $('.GetSCOrderStatusloader');
                //var zincStatus = $(this).closest('td').find('.zincStatus');
                //var btnSendToZinc = $(this).closest('tr').find('#btnSendToZinc');

                var OrderArraryForSinglePage = [];

                // var productsku = $('.tblOrderMainHead .selectSkucheckbox:checked').val().trim();

                if ($(document).find('#headerCheckBox').is(':checked')) {
                    $(document).find('.SCOrderCheckbox').each(function (index) {
                        var status = $(this).is(':checked');
                        if (status) {
                            var OrderID = $(this).val();
                            OrderArraryForSinglePage.push(OrderID)
                        }
                    });
                }
                else {
                    $(document).find('.SCOrderCheckbox').each(function (index) {
                        var status = $(this).is(':checked');
                        if (status) {
                            var OrderID = $(this).val();
                            OrderArraryForSinglePage.push(OrderID)
                        }
                    });
                }
                $(loader).css('display', 'block');
                var Url = '/SellerCloud/GetOrderStatus/';
                if (OrderArraryForSinglePage.length > 0) {
                    OrderArraryForSinglePage.forEach(function (sellerCloudOrderId,index)
                    {
                        $.ajax({
                            type: 'Get',
                            url: Url,
                            data: { orderid: sellerCloudOrderId },
                            dataType: 'json',
                            traditional: true,
                            success: function (data) {
                                if (data.status) {
                                    $(loader).css('display', 'none');
                                    if (data.DropshipStatus != 'None') {
                                        $("." + sellerCloudOrderId).parent().find('#btnSendToZinc').css('display', 'none');
                                    }
                                    if (data.DropshipStatus == "None") {
                                        $("." + sellerCloudOrderId).parent().find('.zincStatus').css('color', 'blue').text("DS " + data.DropshipStatus);
                                    }
                                    else if (data.DropshipStatus == "Requested") {
                                        $("." + sellerCloudOrderId).parent().find('.zincStatus').css('color', 'orange').text("DS " + data.DropshipStatus);
                                    }
                                    else {
                                        $("." + sellerCloudOrderId).parent().find('.zincStatus').text("DS " + data.DropshipStatus);
                                    }

                                    if (data.scOrderStatus == "InProcess") {
                                        $("." + sellerCloudOrderId).css('color', 'blue').text(data.scOrderStatus);
                                    }
                                    else if (data.scOrderStatus == "Completed") {
                                        $("." + sellerCloudOrderId).css({ "color": "white", "background-color": "green" }).text(data.scOrderStatus);
                                    }
                                    else if (data.scOrderStatus == "Canceled") {
                                        $("." + sellerCloudOrderId).css({ "color": "white", "background-color": "orange" }).text(data.scOrderStatus);
                                    }
                                    else if (data.scOrderStatus == "OnHold") {
                                        $("." + sellerCloudOrderId).css("color", "red").text(data.scOrderStatus);
                                    }
                                    else {
                                        $("." + sellerCloudOrderId).text(data.scOrderStatus);
                                    }
                                    // $(".zincStatus").text("DS "+data.DropshipStatus);

                                    if (data.PaymentStats == "Charged") {
                                        $("." + sellerCloudOrderId).parent().find('.paymentStatus').children('span').css('color', 'blue').text(data.PaymentStats);
                                    }
                                    else if (data.PaymentStats == "FullRefund") {
                                        $("." + sellerCloudOrderId).parent().find('.paymentStatus').children('span').css({ 'color': 'white', 'background-color': 'red' }).text(data.PaymentStats);
                                    }
                                    else {
                                        $("." + sellerCloudOrderId).parent().find('.paymentStatus').children('span').text(data.PaymentStats);
                                    }
                                }
                                else {
                                    $(loader).css('display', 'none');
                                }
                            }
                        })
                    });

                }

            });

            var SCText = [];
            var statusText = $(".Zn-status-text").text();
            var DSText = $(".DS-status-text").text();
            var PyText = $(".Py-status-text").text();


              var res = statusText.split(",");
            var DS = DSText.split(",");
            var Pyment = PyText.split(",");
           // var SC = SCText.split(",");

             $.each(res, function (key, value) {
                $(".ms-options").find("input[type=checkbox]").each(function () {

                    if ($(this).val() == value.trim()) {
                        $(this).prop("checked", true);
                    }
                });
            });
            $.each(DS, function (key, value) {
                $(".ms-options").find("input[type=checkbox]").each(function () {

                    if ($(this).val() == value.trim()) {
                        $(this).prop("checked", true);
                    }
                });
            });
            $.each(Pyment, function (key, value) {
                $(".ms-options").find("input[type=checkbox]").each(function () {

                    if ($(this).val() == value.trim()) {
                        $(this).prop("checked", true);
                    }
                });
            });
            //  $.each(TagText, function (key, value) {

            $(document).on('click', '.ms-options-wrap', function () {
                var TagText = $(".tags-status-text").attr("value");


                $(this).find("span").each(function () {

                    if ($(this).text() == 'Tag') {
                        $(this).parent().parent().find("input[type=checkbox]").each(function () {

                    if ($(this).val() == TagText) {
                        $(this).prop("checked", true);
                    }
                });
                    }
                });
            });

            $(".SC-status-text").each(function () {
               var vl = $(this).attr("value");
                SCText.push(vl);
            });
            if (SCText.length > 0) {
                $.each(SCText, function (key, value) {
                    $(".ms-options").find("input[type=checkbox]").each(function () {

                        if ($(this).val() == value.trim()) {
                            $(this).prop("checked", true);
                        }
                    });
                });
            }

            $(document).on('click', ".btnViewNotes", function (e) {
                var sellerCloudOrderId = $(this).attr('value');
                var optionsdate = { day: 'numeric', year: 'numeric', month: 'short', hour: '2-digit', minute: '2-digit', second: '2-digit', hour12: true };

                $("#NotesModel").modal({ backdrop: 'static', keyboard: false }, 'show');
                $("#notesmodelform").append('<div style="display:flex"><textarea type="text" class="form-control" maxlength="1000" id="myInput" name="Fielddata" row="3" style="width: 700px;margin-right:2px"></textarea><div style="display: flex;flex-direction: column;align-items: center;justify-content: space-between;"> <span id="count" style="vertical-align: top;"></span> <input type="button" name="" value="Save" class="btn btn-sm btn-success savdata" /></div></div>');
                $("#NotesModalheader").append(' <h4 class="modal-title">Notes</h4><a id="getSellerCloudOrderNotes"><img title="Get notes from sellercloud"class="" style="cursor:pointer;margin-top: 10px;margin-left: 5px;" src="/Images/RefresSCOrders.png" height="18px" width="18px" alt=""></a><span><img style="display:none;margin-top: 7px;" class="ButtonLoadernotes" height="25px" width="25px" src="/Images/loadingImage.gif" /></span>');
                $(".closed").click(function () {
                    $("#NotesModel").modal('hide');
                    $("#notesmodelform").empty();
                    $("#NotesModalheader").empty();

                })
                  $("#myInput").keyup(function(){
  $("#count").text(($(this).val().length)+"/1000");
 });
                $(".savdata").click(function () {
                    var imageProcessing = $('.ButtonLoadernotes');
                    $(imageProcessing).css('display', 'inline');
                    var str = $("#myInput").val();
                    var options = { day: 'numeric', year: 'numeric', month: 'short', hour: '2-digit', minute: '2-digit', second: '2-digit', hour12: true };
                    var prnDt = new Date().toLocaleTimeString('en-us', options);
                    if (str == "") {
                        alert("please insert notes detail")
                    }
                    else {

                        $(".list").append('<span style="color:#9292a2 ;margin-right: 10px;">' + prnDt + '</span>');
                         $(".list").append('<span style="color:#9292a2 ;margin-right: 10px;">Developer BestBuy</span>');
                        $(".list").append('<div style="margin-bottom:0px;border: 1px solid beige;padding: 5px 10px;margin-right: 10px;">' + str + '</div>');



                        var Urlcreate = '/OrderNotes/CreateSCOrderNotes/';
                        $.ajax({
                            url: Urlcreate,
                            data: { orderID: sellerCloudOrderId, Notes: str },
                            type: 'POST',
                            traditional: true,
                            dataType: 'json',

                            success: function (data) {
                                $(imageProcessing).css('display', 'none');
                            }


                        });

                    }
                    $("#myInput").val('');
                });
                $(".list").empty();

                var UrlLive = '/OrderNotes/GetOrderNotesFromSC/';

                $("#getSellerCloudOrderNotes").click(function () {
                    var imageProcessing = $('.ButtonLoadernotes');
                    $(imageProcessing).css('display', 'inline');
                    $.ajax({
                        url: UrlLive,
                        data: { orderID: sellerCloudOrderId },
                        type: 'Get',
                        traditional: true,
                        contentType: 'application/json',
                        success: function (data) {
                            $(imageProcessing).css('display', 'none');
                              $(".list").empty();
                            $.each(data, function (key, value) {

                                var prnDt = "";
                                if (value.AuditDate != null) {
                                    var prnDt = new Date(value.AuditDate).toLocaleTimeString('en-us', optionsdate);
                                }


                                $(".list").append('<span style="color:#9292a2;margin-right: 10px;">' + prnDt + '</span>');
                                 $(".list").append('<span style="color:#9292a2;margin-right: 10px;">' + value.CreatedByName + '</span>');
                                $(".list").append('<div style="margin-bottom:0px;border: 1px solid beige;padding: 5px 10px;margin-right: 10px;">' + value.Note + '</div>');

                            });
                        }

                    });

                });

                var Url = '/OrderNotes/GetSCOrderNotes/';
                $.ajax({
                    url: Url,
                    data: { orderID: sellerCloudOrderId },
                    type: 'Get',
                    traditional: true,
                    contentType: 'application/json',
                    success: function (data) {
                        $.each(data, function (key, value) {
                            var prnDt = "";
                            if (value.AuditDate != null) {
                                 var prnDt =  new Date(value.AuditDate).toLocaleTimeString('en-us', optionsdate);
                            }


                              $(".list").append('<span style="color:#9292a2;margin-right: 10px;">' + prnDt + '</span>');
                                 $(".list").append('<span style="color:#9292a2;margin-right: 10px;">' + value.CreatedByName + '</span>');
                                $(".list").append('<div style="margin-bottom:0px;border: 1px solid beige;padding: 5px 10px;margin-right: 10px;">' + value.Note + '</div>');
                        });
                    }
                });
            });

        });
        $(document).on('click', "#GetParentIdbtn", function (e) {
            e.preventDefault();
            $("#lblparent").empty();
            $("#lblchild").empty();
            var sellerCloudOrderId = $(this).attr('data-id');
            var id = "GetParentIdbtn" + sellerCloudOrderId;
            //var imgcloud = $(<img src="~/Images/sellercloud-gray.png" />);
            $("#" + id).find("#appendivchildparent").empty();
            $.get({
                type: 'Get',
                url: '@Url.Content("/RelatedOrder/GetChildOrderByParent/")',
                data: { OrderId: sellerCloudOrderId },
                dataType: 'json',
                success: function (data) {
                    $.each(data, function (key, value) {
                        var div = $("#" + id).find("#appendivchildparent");
                        div.append("<div><p style='margin-bottom: 5px;'>Parent Order:</p> <a target='_blank' href='@Url.Action("OrderViewPage", "BBOrderViewPage")?SCorderid=" + sellerCloudOrderId + " '>" + sellerCloudOrderId + "</a> <a href='https://lp.cwa.sellercloud.com/Orders/Orders_Details.aspx?ID="+ sellerCloudOrderId + "' target='_blank'><img src='/Images/sellercloud-gray.png' /></a>");
                        div.append("<div><p style='margin-bottom: 5px;'>Child Order:</p> <a target='_blank' href='@Url.Action("OrderViewPage", "BBOrderViewPage")?SCorderid=" + value.OrderId + " '>" + value.OrderId + "</a> <a href='https://lp.cwa.sellercloud.com/Orders/Orders_Details.aspx?ID=" + value.OrderId + "' target='_blank'><img src='/Images/sellercloud-gray.png' /></a>");
                            $("#" + id).toggle('fast')
                            //$("#lblparent").text(sellerCloudOrderId);
                            //$("#lblchild").text(value.OrderId);
                           //$(".top").toggle();
                        });
                    },
                    error: function (data) { }
            });
        });

       $(document).on('click', "#GetquantityFromSellerCloud", function (e) {

                var SKu =  $(this).attr('data-id');
           var Url = '/ProductWarehouseQty/UpdateWarehouseQuantityFromSellerCloudForOrderLIst/';
           var loader = $(this).next().find('.ButtonLoader1');
               loader.css('display', 'inline');

                    $.ajax({
                        type: 'Get',
                        url: Url,
                        data: { sku: SKu },
                        dataType: 'json',
                        traditional: true,
                        success: function (data) {
                               loader.css('display', 'none');
                            $.each(data, function (key1, value1) {
                                debugger;
                                $("." + SKu.replace(/\s/g, '')+value1.WarehouseName.replace(/\s/g, '') ).text(value1.AvailableQty);
                            });
                        }
                    });

        })



          $(document).on('click', '.Getproductid', function () {
           // $("#" + sellerCloudOrderId + ProductSKU).text(data).empty();
            var sellerCloudOrderId = $(this).attr('data-id');
            var ProductSKU = $(this).attr('data-sku');

            var Url = '/SellerCloud/GetProductTitle/';
            $.ajax({
                type: 'POST',
                url: Url,
                data: { sellercloudid: sellerCloudOrderId, productsku: ProductSKU },

                traditional: true,
                success: function (data) {

                    $("#" + sellerCloudOrderId + ProductSKU).text(data);
                    $("#" + sellerCloudOrderId + ProductSKU).toggle('fast')


                }
            })
        });
    </script>
}
