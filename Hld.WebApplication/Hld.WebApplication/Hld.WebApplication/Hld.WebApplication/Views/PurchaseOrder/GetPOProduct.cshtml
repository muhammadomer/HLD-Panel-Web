@model Hld.WebApplication.ViewModel.PurchaseOrderItemsViewModel
@{
    ViewData["Title"] = "POItemsDetails";
    Layout = "~/Views/Shared/_LayoutNavigation.cshtml";
}
@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService
<link href="~/lib/jQuery-MultiSelect/jquery.multiselect.css" rel="stylesheet" />
<link href="~/select2/css/select2.min.css" rel="stylesheet" />

<link href="~/css/date-range-picker/daterangepicker.css" rel="stylesheet" />

<style>

    .pagination > a {
        padding: 5px;
    }
    .ui-autocomplete {
        z-index: 2000;
    }
    .ms-options-wrap.ms-active > .ms-options {
        max-width: 400px !important;
        min-height: 92px !important;
    }

    .ms-options-wrap > button:focus, .ms-options-wrap > button {
        border-radius: 4px;
        height: 25px;
        outline: none !important;
    }

    ms-options-wrap > button:focus, .ms-options-wrap > button {
        padding: 1px 0px 1px 2px !important;
    }

    .ms-options-wrap > .ms-options > ul label {
        width: 101% !important;
    }
        .loader {
        position: fixed;
        left: 0px;
        top: 0px;
        width: 100%;
        height: 100%;
        z-index: 9999;
        opacity: .9;
        background-color: rgb(249,249,249);
     
    }

        .loader img {
            /*width: 300px;
            height: 220px;*/
            top: 50%;
            position: absolute;
            left: 50%;
            margin: 0;
            margin-right: -50%;
            transform: translate(-50%,-50%);
        }
    .searchFormcard {
        position: fixed;
        background: white;
        
        width: 97%;
        padding: 58px 0px;
        top: 10px;
        z-index: 500;
    }
    .fixedclassforpagination {
        position: fixed;
        top: 205px;
       width: 668px;
        z-index: 500;
        background: white;
    }
    .select2-container {
        box-sizing: border-box;
        display: inline-block;
        margin: 0;
        width: 175px !important;
        position: relative;
        vertical-align: middle;
    }

        .select2-container .select2-selection--single {
            box-sizing: border-box;
            cursor: pointer;
            display: block;
            height: 26px !important;
            user-select: none;
            -webkit-user-select: none;
        }

    .select2-container--default .select2-results > .select2-results__options {
        max-height: 275px;
        overflow-y: auto;
    }

    .select2-container .select2-selection--single .select2-selection__rendered {
        display: block;
        padding-left: 8px;
        padding-right: 20px;
        outline: none;
        line-height: 26px !important;
        box-shadow: none !important;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
    }
</style>

<div class="modal fade" id="myModal" tabindex="-1" style="margin-top: 80px!important;" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" style="max-width: 680px !important;">
        <div class="modal-content">
            <div class="modal-header" style="display:flex;flex-direction:row-reverse!important">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="exampleModalLabel"><b>Shipment Detail</b></h4>
            </div>
            <div class="modal-body">
                <div class="form-row">
                    <div class=" col-12">
                        <table calss="table table5" style="width:100%">
                            <thead>
                                <tr>
                                    <th>
                                        Image
                                    </th>
                                    <th>
                                        SKU
                                    </th>
                                    <th>ShipmentID</th>
                                    <th>
                                        Shipped Qty
                                    </th>
                                    <th>Created On</th>
                                    <th>Shipped On</th>
                                    <th>Received On</th>

                                </tr>
                            </thead>
                            <tbody class="mytab"></tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="container-fluid">
    <div class="loader">
        <img src="~/Images/giffff.gif" />
    </div>
    <div class="mb-1 searchFormcard" id="searchForm">
        <div class="col-sm-12">
            <div class="card">

                <div class="card-header" style="font-weight:bold;
">Products in PO's</div>

                @using (Html.BeginForm("GetPOProducts", "PurchaseOrder", FormMethod.Get))
                {
                    <div class="card-body">

                        <div class="row">
                            @if ((await AuthorizationService.AuthorizeAsync(User, "Access to Product Link in PO")).Succeeded)
                            {
                                @*<div class="col-md-1 p-0 mr-1">*@

                                    @*<input asp-for="Vendor" type="search" id="Vendor" placeholder="Vendor" class="form-control" />*@
                                    @*<span asp-validation-for="VendorAlias" class="text-danger"></span>*@
                                    @*<span style="color:red;padding-left:0px;" id="empty-message-Vendor"></span>*@

                                    @*@Html.HiddenFor(e => Model.VendorID, htmlAttributes: new { @id = "VendorIdForMessage", @name = "VendorID" })
                                </div>*@

                                <div style="margin-right:6px;">
                                    <select class="js-example-basic-single form-control vendorlistgetFromPOProduct" name="VendorID" id="vendor">

                                        <option value="">Vendor</option>


                                    </select>
                                </div>
                            }
                        <div class="col-md-2 p-0 mr-1">
                            <input type="text" id="SKU" name="SKU" placeholder="SKU" value="@Model.ProductID" class="form-control" style="box-shadow:none" />
                            <input name="EmptyFirstTime" id="EmptyFirstTime" value="@Model.EmptyFirstTime" style="display:none" />
                        </div>
                            <div class="col-md-1 p-0 mr-1">
                                <input type="number" id="POID" name="POID" value="@Model.PurchaseID" placeholder="PO #" class="form-control" style="box-shadow: none" />
                            </div>

                            <div class=" col-md-3 p-0 mr-1">
                                <input type="text" id="title" name="title" placeholder="Title" value="@Model.ProductTitle" class="form-control" style="box-shadow:none" />
                            </div>
                            <div class=" col-md-2 p-0 mr-1">
                                <select id="multiselect" class="3col active form-control  mb-2 mr-sm-2 QuantityStatus" multiple="multiple" style="box-shadow:none">
                                    <option value="OpenItem">Open Item</option>
                                    <option value="ReceivedItem">Received Item</option>
                                    <option value="OrderdItem">Ordered Item</option>
                                    <option value="NotShipped">Not Shipped</option>
                                    <option value="ShippedButNotReceived">Shipped But Not Received</option>
                                </select>
                                <input type="hidden" name="ItemType" id="ddlQuantity" />
                            </div>
                            <div class="col-md-1 p-0" style="margin-right: 15px;">
                                <div id="reportrange" style="background: #fff; cursor: pointer; border: 1px solid #ccc;padding: 3px;border-radius: 4px;width: 132px;box-shadow:none">
                                    <i class="fa fa-calendar"></i>&nbsp;
                                    <span></span> <i class="fa fa-caret-down"></i>
                                </div>
                                <input type="hidden" name="orderDateTimeFrom" id="orderDateTimeFrom" />
                                <input type="hidden" name="orderDateTimeTo" id="orderDateTimeTo" />
                            </div>
                            <div class="ml-3">
                                <button class="ml-1 btn btn-primary" type="submit" id="btnSearchOrder">Search</button>
                            </div>
                        </div>
                        <div class="form-group">

                        </div>
                    </div>

                }
            </div>
        </div>
    </div>
</div>

    <div class="row col col-12 fixedclassforpagination" id="fixActionMenu" style="margin-left: 8px;">
        <div class="col col-md-4">
            <div class="row">
                <div class="pagination col-md-3">

                </div>

            </div>
        </div>
        <div class="col col-md-6">
            @*<span> Total Items Found : @ViewBag.TotalCount</span>*@
            @if (ViewBag.TotalCount == null)
            {
                <span style="vertical-align: sub"> Total Records Found : 0 </span>
                <span id="itemPerPage" style="margin-left:20px;vertical-align:sub"> Records Per Page : 0</span>
            }
            else
            {
                <span style="vertical-align: sub"> Total Records Found : @ViewBag.TotalCount</span>
                <span style="margin-left: 20px;
        vertical-align: sub
"> Records Per Page : <span class="itemPerPage"></span></span>
            }
        </div>



    </div>

<div class="container-fluid">
    <div id="loadOrder">

    </div>
</div>
<div class="container-fluid">
    <div class="pagination" style="padding-left: 10px;">

    </div>
</div>
@section Scripts{
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script src="~/sticky-table-headers/js/jquery.stickytableheaders.min.js"></script>
    <script src="~/lib/jQuery-Paging/jquery.paging.min.js"></script>
    <script src="~/lib/jQuery-MultiSelect/jquery.multiselect.js"></script>
    <script src="~/select2/js/select2.full.min.js"></script>

    <script src="~/lib/date-range-picker/moment.min.js"></script>
    <script src="~/lib/date-range-picker/daterangepicker.js"></script>

    <script src="~/lib/jquery.tablesorter/js/jquery.tablesorter.min.js"></script>

    <script type="text/javascript">
        var selectedDateFrom = "";
        var selectedDatTo = "";
        $(document).ready(function () {
            $('#btnSearchOrder').click(function () {

                $('#itemPerPage').show();
            });
            function vendorlistgetFromPOProduct() {
                debugger;
                        $.ajax({
                            url: "/ApprovedPrice/GetAllVendorForAutoComplete",
                            type: "POST",
                            minLength: 3,
                            dataType: "json",
                            data: { Prefix:""},
                            success: function (data, ui) {
                                var content = '';
                                $.each(data, function (index, value) {

                                    content = content + '<option value = "' + value.UserName + '">' + value.UserAlias + '</option>';



                                });

                                $(".vendorlistgetFromPOProduct").append(content);
                                $(".vendorlistgetFromPOProduct").val(@Model.VendorID);


                            }
                })



            }

            vendorlistgetFromPOProduct();
            $(".vendorlistgetFromPOProduct").select2();

            $(document).on('click', '.viewbtn', function () {
                debugger;
                var SKU = $(this).attr("data-SKU");
                var POID = $(this).attr("data-POID");
                $.ajax({
                    type: 'GET',
                    url: '../Shipment/ShipmentDetailBySku?SKU=' + SKU + '&POID=' + POID,
                    contentType: 'application/json',
                    success: function (res) {
                        console.log("data", res);
                        $(".mytab").html("");
                        $.each(res, function (key, value) {
                            var CreatedOn = new Date(value.CreatedOn);
                            CreatedOn = CreatedOn.getDate() + "-" + (CreatedOn.getMonth() + 1) + "-" + CreatedOn.getFullYear();

                            var ShippedDate = new Date(value.ShippedDate);
                            ShippedDate = ShippedDate.getDate() + "-" + (ShippedDate.getMonth() + 1) + "-" + ShippedDate.getFullYear();

                            var ReceivedDate = new Date(value.ReceivedDate);
                            ReceivedDate = ReceivedDate.getDate() + "-" + (ReceivedDate.getMonth() + 1) + "-" + ReceivedDate.getFullYear();

                            if (ReceivedDate == '1-1-1') {
                                ReceivedDate = '';
                            }

                            if (ShippedDate == '1-1-1') {
                                ShippedDate = '';
                            }

                            if (CreatedOn == '1-1-1') {
                                CreatedOn = '';
                            }
                            var typeTd = '';
                            if (value.Type == 'casepack') {
                                typeTd = '<a style="cursor:pointer" href="../ShipmentCasePack/viewShipment?ShipmentId=' + value.ShipmentId + '" target="_blank">' + value.ShipmentId + '</a>';
                            }
                            else {
                                typeTd = '<a style="cursor:pointer" href="../Shipment/Shipmentindex?ShipmentId=' + value.ShipmentId + '" target="_blank">' + value.ShipmentId+'</a>';
                            }

                            var skutbody = '<tr>' +
                                '<td style="padding-top:5px;padding-bottom:5px"><a id="largeimage" target="_blank" href=""><img style="width: 50px;" src="@ViewBag.S3BucketURL/' + value.CompressedImage + '"/></a></td>' +
                                '<td>' + value.SKU + '</td>' +
                                '<td>' + typeTd + '</td>' +
                                '<td>' + value.ShipedQty + '</td>' +
                                '<td>' + CreatedOn+ '</td>' +
                                '<td>' + ShippedDate+ '</td>' +
                                '<td>' + ReceivedDate + '</td>' +
                                '</tr>';
                            $("table .mytab").append(skutbody);
                        });
                        $('#myModal').modal('show');
                    }
                });
                //$(this).find('input[type="text"]').focus();
            });

            var start = moment().subtract(7, 'days');
            var end = moment();

            function cb(start, end) {

                $('#reportrange span').html(start.format('MMMM D, YYYY') + ' - ' + end.format('MMMM D, YYYY'));

            }

            $('#reportrange').daterangepicker({
                startDate: start,
                endDate: end,
                ranges: {
                    'Today': [moment(), moment()],
                    'Yesterday': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],
                    'Last 7 Days': [moment().subtract(6, 'days'), moment()],
                    'Last 30 Days': [moment().subtract(29, 'days'), moment()],
                    'This Month': [moment().startOf('month'), moment().endOf('month')],
                    'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]
                }
            }, cb);
            cb(start, end);

            $("#orderDateTimeFrom").datepicker({ dateFormat: 'yy-mm-dd' });


            $("#orderDateTimeTo").datepicker({ dateFormat: 'yy-mm-dd' });

            $('#reportrange').on('apply.daterangepicker', function (ev, picker) {

                selectedDateFrom = picker.startDate.format('YYYY-MM-DD');
                selectedDatTo = picker.endDate.format('YYYY-MM-DD');
                $("#orderDateTimeTo").val(selectedDatTo);
                $("#orderDateTimeFrom").val(selectedDateFrom);
                console.log($("#orderDateTimeTo").val());
                console.log(selectedDatTo);
            });
           
            //var Items = getUrlParameter('CustomerName');
            $('select[multiple].active.3col.QuantityStatus').multiselect({
                columns: 1,
                placeholder: 'Quantity Type',
                maxPlaceholderOpts: 1,

                selectAll: false,
                onOptionClick: function (element, option) {
                    $('#ddlQuantity').val($(element).val());
                    $(element).val();
                },
            });
            var getUrlParameter = function getUrlParameter(sParam) {
                var sPageURL = window.location.search.substring(1),
                    sURLVariables = sPageURL.split('&'),
                    sParameterName,
                    i;

                for (i = 0; i < sURLVariables.length; i++) {
                    sParameterName = sURLVariables[i].split('=');

                    if (sParameterName[0] === sParam) {
                        return sParameterName[1] === undefined ? true : decodeURIComponent(sParameterName[1]);
                    }
                }
            };
            $("#EmptyFirstTime").val("No");
            var item = getUrlParameter('ItemType');
            var OrderDateTimeFrom = getUrlParameter('orderDateTimeFrom');
            var OrderDateTimeTo = getUrlParameter('orderDateTimeTo');
            var SKU = $("#SKU").val();
            var POID = $("#POID").val();
            //var Vendor = $("#VendorIdForMessage").val();
            var Vendor = getUrlParameter('VendorID');
            var Title = $("#title").val();
            var EmptyFirstTime = getUrlParameter('EmptyFirstTime');

              //pagination
            if (EmptyFirstTime) {
                 $(".pagination").paging(parseInt('@ViewBag.TotalCount'), {
                  format: '[< nncnn >]',
                  perpage: 25, // show 10 elements per page
                  lapping: 0, // don't overlap pages for the moment
                  page: 1, // start at page, can also be "null" or negative
                    stepwidth: 0, // =0 means blockwise next/prev steps
                  onSelect: function (page) {
                      var item = getUrlParameter('ItemType');
                      var SKU = $("#SKU").val();
                      var Title = $("#title").val();

                      pageNo = page;
                      // add code which gets executed when user selects a page
                      var url = '/PurchaseOrder/GetPOProductList?page=' + page + '&SKU=' + SKU + '&Vendor=' + Vendor + '&title=' + Title + '&ItemType=' + item + '&POID=' + POID + '&OrderDateTimeFrom=' + OrderDateTimeFrom + '&orderDateTimeTo=' + OrderDateTimeTo + '&EmptyFirstTime=' + EmptyFirstTime;
                      var completURL = url  ;
                      $(".loadertbl").show();
                       $(".loader").show();
                      $.ajax({
                          url: completURL,
                          data: {  },
                          type: 'POST',
                          traditional: true,
                          success: function (data) {
                              $('#loadOrder').empty();
                              $('#loadOrder').html(data);
                              $(".loader").hide();
                              $(".loadertbl").hide();
                              var itemcount = $(".mytable").find("tr").length-3;
                              $(".itemPerPage").text(itemcount);
                              $(function () {
                                  $("table").tablesorter();
                              })
                           // $('#tableOrderList').stickyTableHeaders({ fixedOffset: 0 });
                          }
                      });
                      if (typeof OrderDateTimeFrom !== "undefined" && typeof OrderDateTimeTo !== "undefined"  )
                      {
                          if (OrderDateTimeFrom !== "" && OrderDateTimeTo !== "") {
                              start = moment(OrderDateTimeFrom);
                              end = moment(OrderDateTimeTo);

                              cb(moment(OrderDateTimeFrom), moment(OrderDateTimeTo));
                          }
                          else
                          {
                              $('#reportrange span').html("No Date Selected");
                          }

                      }
                      else {
                          $('#reportrange span').html("No Date Selected");
                      }


                      //$.get(completURL).done(function (response) {
                      //      $('#loadOrder').empty();
                      //      $('#loadOrder').html(response);

                      //      $('#tableOrderList').stickyTableHeaders({ fixedOffset: 65 });
                      //  });
                    },
                    onFormat: function (type) {
                        switch (type) {
                            case 'block': // n and c
                                if (this.page === this.value) {
                                    return '<span>' + this.value + '</span>';
                                } else {
                                    return '<a href="#">' + this.value + '</a>';
                                }
                            case 'next': // >
                                return '<a href="#">&gt;</a>';
                            case 'prev': // <
                                return '<a href="#">&lt;</a>';
                            case 'first': // [
                                return '<a href="#">First</a>';
                            case 'last': // ]
                                return '<a href="#">Last</a>';
                        }
                  }


                });
            }

            else {
                 $(".pagination").paging(parseInt('@ViewBag.TotalCount'), {
                format: '[< nncnn >]',
                    perpage: 25, // show 10 elements per page
                        lapping: 0, // don't overlap pages for the moment
                        page: 1, // start at page, can also be "null" or negative
                    stepwidth: 0, // =0 means blockwise next/prev steps
                     onSelect: function (page) {
                         pageNo = page;
                    },
                    onFormat: function (type) {
                        switch (type) {
                            case 'block': // n and c
                                if (this.page === this.value) {
                                    return '<span>' + this.value + '</span>';
                                } else {
                                    return '<a href="#">' + this.value + '</a>';
                                }
                            case 'next': // >
                                return '<a href="#">&gt;</a>';
                            case 'prev': // <
                                return '<a href="#">&lt;</a>';
                            case 'first': // [
                                return '<a href="#">First</a>';
                            case 'last': // ]
                                return '<a href="#">Last</a>';
                        }
                    }
                 });
                $(".loader").hide();
            }


            $('#SKU').autocomplete({
                autoFocus: true,
                source: function (request, response) {
                    $.ajax({
                        url: "/Product/GetAllSKUForAutoComplete",
                        type: "POST",
                        minLength: 3,
                        dataType: "json",
                        data: { Prefix: request.term },
                        success: function (data, ui) {
                            console.log("Data", data);
                            //if (data.length > 0) {
                            response($.map(data, function (item) {
                                if (item != null) {
                                    return { label: item.SKU, value: item.SKU, id: item.SKU };
                                }

                            }));
                        }
                    })
                },
                response: function (event, ui) {
                    console.dir(ui.content)
                    if (ui.content.length === 0) {
                        $("#sku-empty-message-Color").text("No results found");
                    } else {
                        $("#sku-empty-message-Color").empty();
                    }
                }
            });

            // $('#Vendor').autocomplete({
            //    autoFocus: true,
            //    source: function (request, response) {
            //        $.ajax({
            //            url: "/ApprovedPrice/GetAllVendorForAutoComplete",
            //            type: "POST",
            //            minLength: 3,
            //            dataType: "json",
            //            data: { Prefix: request.term },
            //            success: function (data, ui) {

            //                //if (data.length > 0) {
            //                response($.map(data, function (item) {
            //                    if (item != null) {
            //                        return { label: item.UserAlias, value: item.UserAlias, id: item.UserName };
            //                    }

            //                }));
            //            }
            //        })
            //    },
            //    select: function (event, ui) {

            //        $('#VendorIdForMessage').val(ui.item.id);
            //    },
            //    response: function (event, ui) {
            //        console.dir(ui.content)
            //        if (ui.content.length === 0) {
            //            $("#empty-message-Vendor").text("No results found");
            //            $('#VendorIdForMessage').val("0");

            //            $('#InputSubmit').attr("disabled", true)
            //        } else {
            //            $("#empty-message-Vendor").empty();
            //            $('#InputSubmit').attr("disabled", false)
            //        }
            //    }
            //});
            if (item != null)
            {
                    var res = item.split(",");
              $.each(res, function (key, value) {
                $(".ms-options").find("input[type=checkbox]").each(function () {

                    if ($(this).val() == value.trim()) {
                        $(this).prop("checked", true);
                          $('#ddlQuantity').val($(this).val());
                    }
                });
            });
            }


        });


    </script>
}
